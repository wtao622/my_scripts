/*
更新时间: 2021-02-24 13:30
赞赏:中青邀请码`46308484`,农妇山泉 -> 有点咸，万分感谢
本脚本仅适用于中青看点极速版领取青豆
食用说明请查看本仓库目录Taskconf/youth/readme.md，其中打卡挑战赛可通过Boxjs开关，报名时间为23点，早起打卡时间为早5点，报名需1000青豆押金，打卡成功可返1000+青豆，打卡失败则押金不予返还，请注意时间运行，
转发文章获得青豆不实，请无视

*/

const $ = new Env("中青看点");

const notify = $.isNode() ? require('./sendNotify') : '';
//const youthNode = $.isNode() ? require('./youth_env') : '';

// 可设置部分
let notifyInterval = $.getdata("notifytimes") || 50; //通知间隔，默认抽奖每50次通知一次，如需关闭全部通知请设为0
let ONCard = $.getdata('zqcard') || "false"; //早起打卡开关
let s = $.getdata('delay_rotary_zq') || "10"; //转盘延迟时间
let withdrawcash = $.getdata('zqcash') || 30; //提现金额
let cardTime = $.getdata('zqtime') || "05"; //打卡时间

// 需获取部分
let withdrawUrl = $.getdata('cashurl_zq'); //提现地址，可选
let withdrawBody = $.getdata('cashbody_zq'); //提现请求，可选
let cookieYouth = '&uid=54378395&cookie=MDAwMDAwMDAwMJCMpN-w09Wtg5-Bb36eh6CPqHualq2jmrCarWOxp4FshnyCm6-4qmqXr6NthJl7mI-shMmXeqDau4StacS3o7GFon7er8_IZIOJl22EY2Ft&cookie_id=940651bb32d9435797fd6a98ed819724';
let artBody = 'T622 *, [26.05.21 02:28]
p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsffhXVBYXMRnUbgY6wvm_T8UMpg8H5ZyQRtdnkG07Xn8HTU0KI4MAyYS8BVIFChpnPviZO4PT5rfDAg4kO6gpqNPcg0j57khsChfDSM_5JMH7RijQKeUd0hXIPBjqL973hddxNgCyHaZvJAFY2h3IV1thlVNJSCkFZwLPpVogm0LDSPusXk8byd7SHRnXDOkAscmDwo5tu9MQCK-OmiNr3Ef8aa_qWEHBQf2ndRbaRZD2J6uEs2OdEMTMmbMvlJeafQR8a1WYICgsFRY3izUC8wkO4rComLkoOSXH097w7Ht_YsckOndWhQiHzMchXAIM7Bow1Z168VPUmz69bZ32EKEABGsS31IEyLuPYtetdz84iqqcdewe-_CPMtMgMnJbyHa2xBPAXJuzEcwLl7XWj-IKttTeHThWqEqoqvQJi-0psi26HHdiO6PwKFT-107EcZS4Mt0Trwtntw5eDzaO8C6IqKMgczdQ6&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsf6X4zYUnUkTkWm_TsVjZVtx3E0Cq6qIxLqV3DVgEEM64lKPfDjm__50Ct8F9Q5G0HuBP2hhjW0mntv1WdJNXYQBgZuHLGBdj76HLwGb1iBfRUEF2boB_1peGo7dPtR58PrjRTOM8Epz17FhK6cuhAy5G9jmiaiRBkBKZHldSKGZpjii112SP5NawDkf45RXLzN3PrnVD6-mQiV0K_e0DqkCNt3s9-ts6t-7_Dg-cCDEaxwfG8CF9I0c10Wa3pQupOaYPHjd2wQaNPGDIKuMLr878ZzGa6mekDrpk3BRbjkTf-K5mTR2L4c0T351d3VaHQ-V5e6YeIHf3j8B3Hjogd5OYzgo_djU6dWUHwZPHC_FYb6arVhPyVv22LlhZcpg9HfpRVftSoCLLOLVlZ96Qzv6Xm2zMmp6S2CkW5iVmFtI8QSSsZaseCrm5cLmW54THgLHnxx-A4Z7vtgqi5QXoF2VYeQlnlpsDQ&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfThs2TXToMZFd3EHE-ajUImfJafGroYdybdU-_vQkbJpEDkIJ_kQQsPj5NtfYL2Q870HmnUX4sEWi688yNJd-NXrljosEtcB8SQz4Czhd8SvybBIBWplt6EcecWHvxhCa1TZAZbVWWeJi1fIZcc_3Yys33r5sKrxnOjA8is0akjO5P4dMNEWpNLAb0fEuHhkHfEOmUq_sZWZT8Dw2AtE3pX8VwGFyNWzSQQpA1CoeOqPYWLQSAVn_HxPVBagjN8BOnzLkGcYQp7xhniWoreeYYgQdiOoKG5W7mXAWWf-Qga4owdM6jwUkpax67jzDNY8g68DEhih-HU2sAKDLLxu705EFAoc01QoFnel-XQj7OFSnwBhAKcYadfGDTQrDD-qjTxetRdEezJnSs4enfq1PxjlT2h1Gsa2ra_ODDm7idbe1LjZ7Z5FpnbMOPKWUXjU2Su2lfcsrmz_ccMht_Zh-PUGSHivHvbSu&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfmMdDF-1ZAIkUiQJzRWUVXXdOEGMEcw36tsVG5KAY8GFQuDV_OTnHC7R2Op0MmfroD7fA3abPdVKwOXU7tD9CS07LC-_CH-OnJtbHjXldtKgzSxJ1eiF-8qO6va_Il4H7tuS0PftZZ2BPLCrBWX6JPiwqJwd83qxaRxsoBUgnsaTA0JgDTvNO6nCNYa9It3Fzc_yh68YwtUx9rlu--pEEhmqFfyTNvSW9IaG1N0F9M8zGvJmWmE-cMioFHXACoC7nwspn1LbbBCVx0WJ1YQFytBI1zO0fdO4YGDnamIct_iB1s6JTqjRNedbNtpUqyu3d2Q_UL__H4l8jvZwa9dpr4UMJq6cB3LgGoVgPwcQ4kUKwvuKtSp6x9eWoKC2M-BhTjqvMYgqtBSD2kqySKkUNgchOMkt1nKU8sN2l6Eoat8l8uMyb6NzMF6kBgh9aJxL3WyYqgXIuf2U9tLsxZj323SHYpnl3uJAF&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfQzsV-JCoI2kCojuWzk8RKmB6S-pCE7_CtE1WnQMfyLaoBHUinap6hX_NOwKHi3qDJYyJocL8FiyzdoTIndn1pSvkh5qt50ckeMlCLq6A_wWv-eBfz2aunUyYtkVJ5o7TforcJHg8E9wWxUhzsBwPlSNuj3rTs7x2IMBKwARMDYgD9L_Sg4cZLQf5q426dKtaUEoyuCDea2rU1VqmP2mIscBxcHkFcfwgZgq9TYqv5okKyYQ7zwcVlLiWSTkq2X--wxZoqv_5jU9I_ecaHwYaqtlQ0_I1llvGpxJPPJbog8uoof5T58QujoBdd3bOQg7AJ-r9RgP_RQaqZ2_hLOPSqTof44-bdg4zo4_1zrVemFdyWqlpWKT3wHU8akViIKVIScJheMZtbZKztsJIa6VKxdfckj0I7b0KIiyg0m8oSWIkFJrY2fN59WGEewe6M3vwmtpaXA_ogHHmpqNJm6RZP8hyIwPC1bJm&p=9NwGV8Ov7

T622 *, [26.05.21 02:28]
1o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfX4XgVQXOQ-l3vJwN7_e2VWRyhD2feLhpMQHCj6X6dJvjIZSWuvRIyB82QTtKbXsRmIjZCYMOHlfaAh1gwEUwsAyEjeqP2CSUo8nc7Z5z09fo10yQp57blNu7NVM2dwhFznuWnkmGavAYm4nw5ITuI6WkCHsJJhMyYJj31eIOcdLeCXy7eKd_DmcSJUWyfLxCNmcr3FPulZRcnD4d41fimQW6pXcP3X7b3fj6ufzSFzUxEsiDxknkWf7UyZ8o1iPHHdP-UlCpGawJuCsOLZYER8uBMk38feoqMmXqpygSJoiaGSrk9LW_v2n8Lld2sE9WF9MIlog-gPDbMgUFpT3oRpzm0DfhavhjxmtVnHTvrxpYFKhM2OtdFfGYDD2GSxJDLo-1APhCT-F3OjWR9BS_Op-2AgrIIef5SiSzp4eUKILQzIw_qspuaxMvq_ThE3a5Cz99OvTL1xLwJZgZyUs10TitRHKiypew&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfk9sEsW3GDddAyLFWZnCL9LoNYmDXc-hriwUjWRH7GH4OvdSYAX10lHGjiTuWUeUh_YKa2-0hEneIsGajGgmpXPhYwNG4UZ_mKmfrijvFJAlJJyCFG9rbqTwQLPe0fSR9Rg6wXAJZyXY58OsEMkNQeCnGIi8yKTXnO0gS-gbchuyqON4XiH3hYXUcbnj89eW5km3BJZwlxKRnG0rYk8i8GJYa0l8b1toSgeGBF_bJl5R1jCxr4fVOuYAm7ns3Kt8pEBvvs2-hHZTJZvCcAlzRd3ByBmm0RqXuLZASudrBCYaehRYoTKYOFNhe6ngK5smzvXiiWfJ1F9zDxetX6DaMpL6LhSiUSPh8P-OgqN2RTzWPF2suwJgpjEA3pOFQbjJkrzRp785F3c04xojMh0R-l8OXuDwat0Y0rNYKB7J3rlxyvAsTdyFUlGVU8H6jTAmuwbmbHhjtA3aZvWieHLf539W5Bnm0Kc7w&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfAIKhRcBwNA7HKsV8yyx2T7HdgVxiyOIZUbBHSWYrg7N5zk8uUmfzgwRK7Cr8wK5x4AXojRrcL8LQEKO7qtMDZHCOvsE6KdEKue-txtdX06lk1WMls9r2FBbuQNRJofFTWNA3hQ050CgK4ZCf4u8eTy26uFKMEy5R3_BoKvWqh9U3vdV3dY4OgSK8PUZqFeKI9Pzl0nb2KHW4ClVSlc53YDpY-clz80StUNSCH4FeaZWfU6eAMMzcbq28hFMOzI4Ww_qQFvTFj0XgoV-XyijTwQsn07R610Ov7YKtAyPrARa0fsmOKBNM_K8nCjYnYynWbeEgRn6W4UZg-THFaWRr2Mw3nDfpKeJuxhi6i1R9_PIniYaPjFIuokGvGbKLzuMDOtP5-NN1cfPJ8cALhxm2M07Gp_KIHVdbgJtNcAPEgkjr2d4_QZ_xO9PEKZ4pUxYZ2bWKE9u7GZa8UjqkifQk-0gf4zRJ7ptQ&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfMIEO6VcLwcOxuOnrxz2gjJqsFYfcvHP38N5Oee9u_kdpsERS_VEvOxFlcDbMP-3cqmmjyBCcAtLdicSXBEw_bBOOVVZDWLEzfcpUn7baAs2w8EvqBlkLK6FPTePIB0-RjjZdYATE5t7vEgxfQf4tERr8oLXrmZrxcGfB1NWjp9l85An15E5hGHnyAqDfNxNS8iskd__iEJp3y4GnVJln-7QQ--358WPfLmXVBEUC6Iz_YPiltMcygwNcyOyTcrMonn3dOjtb7jzKxQEKf3BGm2Qbl0cUoxxCmIkOHl41TTn8Rmu7eXRlUT7BgHTNeyP1WNcaUYY96ZHgth918kA6B98Jpp9HmkSau-Ay40JPaWfgu_agLrWlOi1NEGOLx2b257CcXVnEhdrRbvl_G7oFZOJF3NpZm_3ZbEgyeUuiUQWaDZF5n_SBiefY0G971DAxmAyOeZgWp176zPov4VL4e6KKaBv-zPqw&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsf_-CsovL_CCNfVasEeNsiBb8ogF0gREytr_-bAX1xa2VRrR6CJduXa9jg4G7sslBiws-xmrsWcIh7ql5oFXQ0eOyotBubRI4D1ESKeLS8-y1Vur4X6Kn3290Jmsfc6ik3jQhpdd-0nQ4vzkfBhcEOejLxsEiHe-mXzJD_CEWY0Sol-zGOu2PJe7iGiccctRTdWNkoUEoZiNx7OOfyreqXHtiCf6Ljr7iWAajZbvxLNCInm_Caxg1VWQi6pTGtjCXH79jsRfPIlRFj3b6TOmsIApisDrOE10nMg7Rhl9JlkDZuN3Xwn3jFOllI6Vz_RcKyzzBbf19sAYLP_txDzZCzLxO6oiuJOODmddWsKTCBPzTDeNwpIhvMbb5FMlL7_LVmg_GXD5Sltjs6WwulzLELOE5eVfaGr6cJlgEbihrYuKQ6eq6HmrcN-ULE8H3Ce3i_04UgpVbojjXUaKqyEsUuNpG_ya1oqn4V&p=9NwGV8Ov71o%3DgW5NEp

T622 *, [26.05.21 02:28]
b6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfTqmYHcgC1RFmIOhlt6zuUuA8BRT7Jy0p8x6WYWMDMrWyVtC4A4lrLk6ooQD-QPuSmQtnzAxtoAJwDNjZaHy1UodFDlBr10S1OWFEv1K3iAjvuO-syfnVTc2_y6jY75R4So68Lx1CNCuPRoIcdEOoU3KIrN6iW5lP7hUNLH8PCH5HnyJtUtV_g2Xntf5tJoejiTPBReQeD1is4VRmCmPwJ5jCwdE_X1Kv6kRYv2LzDub3Jzf0XQvC5XMthpS53-LgUCyOlsUSNqaR75ZC4I9Nvta3H278N7VYlHH6eGz35F1TRWZjRI6ipr3oKTxz-yAFlrqz8HOlvgA3mVGFxMDEOLZSviOX694zsy-SorBgF0G3FFsX9Q_AYvD7Ln-7BBQJORUpyDjy4oxjW_YrpbKYU4oZHvqRsvGfxnm0MVGChmO_T38JkXqn5DVKgFjavxccSu_52oPBA5xam5euFvlSuSFLGRF8SuWf&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfN55hZ5NivbvLaX-LiB9ertj6KDPdN7cBZeyFPP7gKo_LQ6Afgg3LUyCVmJwoQyG2275ySNGkRM6uoZAIt25hlw63E6XwdMf70F7Ynn7T63h0g52CyMARGcDu0osnC50FuvIpX_hjpUOb4tMHP4t84KDFsZon0FxRzBb7SeCbcF0hXB5swXkYdXbnUjYs4qxUEgxX5RKU5k7g6vTl0pflvhxW-SvF4uFU4ymnHIgV2_0k1xipEfnxcQrf83WTO72p8b_kQdw5cIeA1Fh3pJwghVl2Gs5XbTKNXdrsy4M1MVgCZN4m3AxasoneFL2lNOL0lwO4n-Rc-eFFMvNW7u_AGm0JJHN5CTsVrmSe7qg-2PSq0Djhi0GKXVTcMIJ6B0phRQC2iF339yy6NOTNeAxS0PkW3uef5bIBQbG7gD0sQGatVV0y6KaPvkajA28UlIkjwB4wdGSJUc92s50PQcsLa7Xe-jAN0f1A&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfOXboUk7M0PKEx_sIb7yHxB3Y8FEHmcBgv4r88toBjdJ_En3qXpIs-xTHiXXPLa8IJM0hlhmPGUynO-AK8P1yd5wh3EjURa6VOXTi7I-dFuKYUXEIx8jdgdGit1a-2sxmVmcli4m3LbuqshApqoQcmNjmHh0yubgLU5ClmOxBhXR1MrbhcaZgUIGJnXn0hoqlewREKouCJzkuGJZAAZ0J9r8Gpov2EFRuE0HmPd2vrPTq6oqIrWuDrBTxq9cJEaFG_VeSc5dJCxTFkz5_i0dGt1DMBBdPptn-Yy1sudOomzUr4YYc6slRFQn8XdXJzq2A0JEj-ocS23rXVVkh_Uo7x2gsGNiLFs5iQ1ZcHEiX6dM63ZtCtDiRnEcVZeZsvQszVB3LAV2mz-P0__ETQFyN1qFKUIlJk-pMjH3JbKvnCnfSQJwWwAdYVtGie3pj4bJl-C3pym6g9CsPtEGpG5tnctIqR0CCDhG-&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfcZjKI3VKd2awOBXm5UpkupscG5KO5sW2IhsThsVXsXgyHq_QwzOcxdoNl7w5pYyum-jqk7tU3gpPMbazi7H6cg3zVGZmlo5fJTsS8gS1w21klBErFJDQJRHH9SndoFI556RLYE3LT4C058qbSGllic2yUhfWr0TgwMwu-uFhvGUzeEufpmDYNhgLLdHz3Ng8Wc_AgXreZo6jPv4zSpAN3KF2ibVRI4HDD-PpnP_9UuT4CnpitMH6LPFgThvsiSO_imEmJqjroJHH5ZJKJxxie0NUBplsGKtiJrIk9TYpFHnAwYN-t6lr_mlxc9asMUfS1GqXx_RzpMXmCoxKP7J3aFMmnnYReJ4A6H_mPZ-QO-lQHdKe8uXtlGXRVxteIc3DuzOGvh8D820e6ec7e5dJ4PL8tv8rfH2wT_A5VxDJFp5SShzLC93qCp7YUEpLrv6YSDQA2qpNaksbLMO6B0ogL6gcDG4_Gsv5&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfgWcMdAKIJrpG7mWpCgKy9hanBYHnjdK2lPooOJ7VEDRJ8T_K_9fg56DZKbTLJl92hwsLjKf0T_3VtuWz3hVAotGi1IU9sQd1gDzg_TSp2_U6J05tb-rYpeLHT8tnV10J3aOAjHUYG74IHgM1SWJpXSzB44BcJvkfq_S8csbC7i7JSwcafVGLcU2xgwXt-RwTA4ETtJGbARNzrGlpBQJBggjrT-0us93TprmsLlzuyoQ1nZhqerhm5CyQvaqeq2pX0iviLg8_0R5z5TtPyJ9mtncEcF34niu-uW8OkKyY-nfq5QQFl3OSeHx4-O7ktnchAvJ6m9ar-dQS2hoWynDHjgd18tobosZsxF8C_ArcqZhMgHiEwf_eSIG5L6Ml_T7NdH3V1Vh2Yrwqtyzs9F4P1y_LzKC1FrPS35VtYZ9dBYrO6tj-xx2XBFAGcPtUISdbE9qmc2asOhkCtM33E53QyFDrFB-_22lR&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSx

T622 *, [26.05.21 02:28]
XenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfnsCh-Gioh-ioa-7EEU2gPLoX-g_vyLhtCXqyhrDgnfQECWs1tnOcciPZOhl6QABmffZjel4elLHlfzSnc0Ts8iEOMALjFTWgeyI7IGdddjz92ZWhrs3fk3RGSLxKH3ugBmyquiFxnnWEikWN_nCKVTuJpFhGaYsOBQPbTPOoUuTdBVXaMLl9zbY78cBvXjxJxahfpY-kRWWZaDVGVue030D6Kd4tnUJtbijAp6rJuWfuOJ6KMP6UvTehtpxKEVgrNzJ-zHs3KYfRMcYrwsvNzeIVhLYZlDu-W6dCqUVXO_3zVXwNTlPZJ1ZkRopQZ1FxBoG0xQV5ECfo8kFJStQyv1shTWvbHy2hZJ6QP3he2zlmdC09EV9a9cYGdWjzihBRnhB_erwxvqU0O4xhG33l9WHzJOEcQU_BBrplbXW0hNW1Sb2CmLt9CVrZGv0F4Kvgo4JGdzN4Q5yFQBFiNHmlxGEBNz6GPbGy&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsf6RWO0I0mMmlAI5ywvZJhGWGoKDvCU5v8lvCNVw0ANAeATmxYdAv7B-6MT9JYswBH8rd8GPuDXWQ9UlaNIOrhBpBuBR2t_0TRwwm8jokayXuYCM74e8UaI80r-LzDwJf2bUtEZyG5P0orhfIzQB51ZJx4Q0cs9jNpUaWO5oZAo6wkMEPysrtuAsZ_4XSOgoLj0BvDAVTwZa_KuUsWv0NWOAesJvc1sF0FopzPRRDngxR9IaM3XvWqEJUL6typ7eX0bY5uRJdjbH58NxGSFICxAltx6r6EqAotq70lCpUGGHdwA3DMBjlEKRZ9EgcM5Rdwjkv9Nza5CuP2XJI4oqKdTkOqgE9LXnTLSPZYCSaJ-Q7535gofDMkhf1QluBFmZRulUhndUq4KcRCq874QW_QW2j6-y-YsSvZodu3CIREpqQGDD7wdH8f2ctwqpnFdwidGF4w-qoDn9lgeIJ12oiflYjopJu7TSkb&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfH5KMyEtCzH8vSAXGGA7NnBSaaf-n6ML73qXxuUdDB_G5QOxbod1BtUNx0MeJPvCKxLxUIYJB6vC3e5Y0fBJ_EP9u_GkovbsrOVhsNPBCBnsgCUvO-U8ulLjbdbz98_kW2-lyWXoKwRiK2HIL8YlD7Yku640yNSFKo3FImJYsWSFotxIMXhVBGDHTUhWMD4ehGb0Zdodlght9lFevlxCfVhZhrt0Flko7SGkthFRJsYygm82PAmFfbqb1af4MVRkMPaC1Afxhx9pr9DLFlB3wPwhuBzgfwQIxJn4_VLeH-8p_F6UFg5QueeVT4rC90KskqRz-BZiDnXY92nyHlNxIy2fYP0fOkYWbAkSTWwwyW-jevptDC5DW8IrjFwPu_O_cwTnDGAJN8ydwKmuPzDqY1lkTGFPLvc7DFLD3qWYw2NHD5txap1jQG_MAA7JgCS0TZ2DNbUs22JtVTJooqfIkfO7aZFR8_5y9&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfQedSrNbf2v9gxZJ1JYE2rXy8nUfQ-UzyzZikXxkJgxR4KvIz8sSESw8T93fHDUptgkY1xF467Y5RS_tojYuh2oJhTQuEeXtqqM7EuqdW4w3tKEZXCHGxghcUeFBq6CAEzbC2AnlQ6-TtfhBCQ77j93dY-xgULE_0mmY8AG9uJFZGM4TltObabaIbCHuAxIvszWPylbBbehrGAPUSPjqTuBhQk7c-CjlGo0XnHLt7SFFP30OJUcOt-uuGoZivNTpZxMSARrPajFEVGXniOxuAobBrrAW_fHvv_W6XGv_lnO5iOLoplouGzjzpCNKN-Px02Da7L5TryC2hqKCvcY4KNC_iM3DRo7ZaKGL8lBw2QiP8MaluLQWNMpewkaPs0L0z0DXlrJUEtNb-RbaU2RRwWCmRfgJS6XBm_7RY_EjAds1tXOuSdtt_JPP9tfJv1XqMOOuKiZAGgBxen5WMKbauZNZx45B-dmZc&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpLXGny407-PpmCBrgyxBMGm_iZnbzy098bBpcf-1MNB_bTl6lXnt0qTjl6cytQdAF4vtvn144cCyGXhKRHhOyquTtoxKa7q_1K1iz_rGFWdTbOtAcJDF3Os-loPgPgoxn2N13AzSvd1GLzv7M-dbiPvfL_22_koPxmCcjZRUfcdayHGb_tTlhHguoa5_EgbFHbrmrDFKO3v8e6u8UvOmaScawqMpzycsR0nTysF8jo9zaYbCUKUavttKI1ehZSRsfo_7g2So9uP8WY9HzH1EskXkgGbc6ePkGxyis04S1aQ2vdVHzuDPghN_eDF2yqyaz1M6J1NKyTWVRPL5CfzQHzmrwVRag2l442EelgeefMtHZOT5TETRYw637-aqOlQmAlSAHWb40SEVJSDWpiQw6hAfYP1HxP7lHayUyrzGlNbBC1sFPlFnXMNZxNvgmjUF-bVv-WMB0QxW5R1WZge9NIas4hW0o9lzU3Zgawyw0jB4ivKhiECHRgKW7lXkaEgZXJEYA1LEKSrYgIk8eiRMKn2-PiiSc03vWL44GTp1oQCYXgDR7OK-q9GIh6NRSMqSop3wJHtN6BXYrCJkVeUPLkPiAWzQ95lJ2RfToouoNH-vQP3yElAznmE5Z5-2yHpmbqcHsu4ILvGycx-UamSrfb54k_nm_SEU8iBzTDx3kahhXI1PNF4LKTMQuP_S2ARdKp4ADrI-UXzMB-1sG3xJsZZjgNcpNsZou&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB

T622 *, [26.05.21 02:28]
26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq5-oG1ycoxZsJ3pJ6bqtv83aNgNgBpIiZMmTlo-1USAEa2xS8hT8ksgDquptWyJpaat5TeCXMh5YlJErD0tHBuLeEuWjuUpTa1W3S9ksmgLBDnCRm8K4Vsl1nsy369iwGimyNio00yGUF5LOSXprpVFAzygKUG5e7x-5K9Ta7LOW72VYQ3HYDOErLi1Yd33aCPS2-fL0YRozmL-HzjrrdehZ8FVwV_x2Hhwm3bKiSwt5wR08BOEq7Nao8qYBzf0QcGyh73UM8N160XTF4NMjiVJIVCQ1ccVZbSjkJiAKs9rLHy0cK74lcLRi5Qx28oG6VyPnMJN9WaFAyGecNeMx-NXKRmV3ocf0uWpQMVjI_s6sCoH2nX3r7J0J_nFb58R8im3NCv0QxiCksROJe-TCkY2tR7TajSIRWzkmDUFbjLxz4gnFZm72GpykQ4S1KI2kldpWiZdxAJzVvD8liVphcn0eIuAR423LWi&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0C6C3wF4TnpMYC9dIpi_Dy9EIf0puMby9RgbJr56g0ionVZZSTz8chSe2QcgDVWxBNcb0zx9dtqv7ivC5Y5Jg7z2gsmmQrvUJx-lOA_rwcwvji7aZdirUY1ttOmjihwBTnY0ptGccjV6QszIo1T5JlKl6i_Og1JllDp7esmOo-4Wvn2PqGuVL-Wx6z1wbfp2evxEHWt0DQuLcDM8XKgBOf2LAtXP864K0Vymm8zz1hqdhVi06yWrGD1LqXFkGkJE8xwSo3Ny-ucuRir2xhIQXr_9z3FdbO14JtC8sQlmxbj8hGjEQKlj69YCS5t-LtutH0NojSlANaXaHbwV8VqDwMkMPCGCkkKRjPzReiIMwAz02B-7sO7LyjGM_y9QEX2w1LB6Qo_S8Jul79jtj3BxjEBfcUvPzYSeKl-OKaTpZWg_3ZXXyRbKy0bRnlHJ5g2p7Iitdh3rdaaLI7-Gn8GZwYEr5vgVu1_VPw%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0DXvz0PD4VMbO4G7grLimboFNxA0WF5tS_j8jySDvSW4Ng0biMhGazYE0A6126hQjq_fX3G9j1VUETMfzAdaR01QdctEQZuVyhWuT6wKsB4wH7xrGS5ovO6CtpEm7T6Gb5ipxHZ6H9eRwnYYJ0lqzs2-pZXLbTyR1PK-5hYEjb1RjDdE5bC5oCIyJTV6msb0abhsbes7x9_jUadaCpIGHzdH78XF365RGFGrmDqqntcNG0d4F96BhA6syaPiysHZsj19CJZOVV4251IO-wuDIheKW2N-3Puz2Ct8j-KMZ2KN3NOXGRH4MCUClT6YE1N7q7ZsgrT4FcFfmvNHqbw1kZWdtgBlgRaJmJ0X4R5Go0W5XzCAC7C44N15oy4hsdycvx3_oy6h-5CXAwlYouRqlZlMOOg7c-mpL5HE0JEZiWCe6WmIfyDdtl0__8Laio0Dw0iLBuzfeYiu2rgdYwHisbQMvxRkBAjvcQ%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhT-mY4dpnvNbaDUz4RWzz1ebxW60grLAHaNSPxUrVSKo5wigEU_up4yo1iWBMy0NJxMhuK57kw36FUdbOCnD5qo-FT4K0D2SWi8oSpCg6he_zY33BTcwoKXsRF-dNsuwWDf4XWNPm-COT1DutQQ93QD-rWVAcAyODi78VnoWj_ifisL-Rt5As3JtHaAGByz-P6VNnUQpQLNZN9h7mdef-Qk-7ePzCo5Q1zR6m4votkOTo2qWRkAEn4dAfvdyADfOe-tXJDZ9Dn6TAmfdaBc8tw3c3xcL3O3BoZt_RI7_CCRZjdyTUpBrMrrR7VI0FNr9DWfYnHh_q26mS3rQt95GIrSoB2Lcsrepe6lDSfF7WSCu8ecpM6cV4nDWWXD-r9L2GJu0khYBFk4KDjvBEa7ZQ3Qr6C9FsrocPASLiUAFQggYy09HKfjIZNcFu1NSB4aswO2x2CRFzIZRqxIF27t2lpGuwECId_SNMKLNj_1KGrZYkQUsgNI12Bt_gdu41wnOJL4t_isViDiwk87Nf0PLIvOJGWWzaaN5XDSBXMsdrBuJr4Thq-2vgDnhehwhha1-pM21FlJAAVDPab8LAhfVo9fNh_HmX6LKURDx4LfFBv2LVm78n4hLWjiCeKe6pz1Eq31ab8BNpS_JJs0hsT7SJbBktbh80q0YiSPgrnz-dr_8JfzHkXDVNd7Sq-BqJ1TisE3s68i1r-Q8wUqeiRzOlG-jUaQugIGjfjj3iQqwYbLnY%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhTFHd9OTVbygOi5cgWeqEK-YY3NeOnmlBfJzI60Ist3IVxlXEmMwU-ymzvbjsW7qbEovzwAEYhi4yWVDay9Jk5FHSoKU9hBczv01ESpYbX3yx-rpX-2_BOMHZkSZG0JLjDo5rMewLOMdPLHyfHYGKcpqkppQqi4vZEqjHsEQxbgs5wPnysfzndQNxWoCP5Mp2U_a8bI1iD3znbqrs2cyK8Cr9vnA52owni7U3smaCitBU0nBtV2RPRpN9rdke_GqaGAvCMI1m7vw7h6DnSj8Z_xKXYhUShaMb9YE-7WKD20gcQlsttIQ7BEX5TYajiw1HxnLi-swJFTD5z8TGVgVrhyoE4f6_NEhcTzqQMO11mLbC0EoVIDcRvOkJXbjWzWcjADqj_PmP2ZO-5o6mxvtwlf1ZZVH3kxDCNRWHl3_Lr4qGUS-dLOFVEo0NBZumFW-xmxBrBYXKEjzsKC10o82VOzXo-1kMosPZA0A_h7FSJQI_Ma-qlkRXDPoMzhV---PPCY26dB9I3iTkMPDnj4mxL9oKinCEHRLhscos9OASR6o4106fBwqMx5TgCtBv4wEyMcBEs5YGaqVVdtwEkDDN7GDixqUdHP9w-z7zyHm01coUF8_m1p4V-k9-9e2eUOYh8-3jd22FTqmBCdlVe1f3v2ZM4M8Z66xXMCBIhP7v8DJa3UUX8uTipIBaMw9ksDAyTpfcV86Ch4-sl59YapAQ8uUGTiNPkvYz3jfY0mNTrh3Q%3D

T622 *, [26.05.21 02:28]
&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0B2JK-0DLjEUwMh8NilBHBGf8RKB-QQ3XTjiGcghNbid221o9EEsHoYPZmiLsSP2EwwdQWm6ljczTLhasoXNFpY8tTHixnSyTLuSWI9C-8dogzntOlTqJuzmrv9Ve3AmzQuSgAattkZDfFFlpvsfZiAwMvCLRuWbqI9F15c0fIzrD_vIey5rpJAB2lnNY_7I8uSb-KwKToybWDAlW_K0Z3tcCMSFL-3GEUaWgXZJZpTM6vy1ZTe7WLHmj-U81pqTSRRWGGzzIRIcOCxO0Za-hmjR7FfNn19KWgY-yjt9AichFRJZARx-pjlYuONEPTcWCLDq4hN7Ev9bapc-x-ZmwNiHwfodLu2Zq2oVUzmOlQ5EHnfC57W2ii32WaIP3fGSdoke76JjSU0xpfBaCBqbk5Nn0-fvvzkZtcYfvRQsBcIASmv1MbkhDAkbXuAhdjnLqZPoDektvImbOpYoAyibWVoMWmIXeTP4_M%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0BkNs-pOK_8epXJ1cHjbH34vYA37r0OTRy9znE4OeJIDyvfhIudxW9jZes4KeXO21ADTOGcdFEthS-iRYn-WqwrEjvx1cBmbA8sajB-GdQ7inIPd5WbSFCfsJHFwqBNepCOPqJVOYDFHOnD7i0hktInCZ2FA-Hm9GYsEFE-il8wmNIkd91e-WKV77TMDuqccIsWObu9Yvt7BFFOaFpxb359dV8dZhuCbzHX5h07QrPsQFVlpizU48sqExhen6SQSKJNefj9cgGcPXsvPl0J5jxtKF75KPESLpbd9-YBM5bWsULketW29tiJCAjA6zaILixhbeSE1h3ovforR4cCDvzKL53Mr5QXsdIGcbV-7YuSHVc493CC5YnGYVYqtIMajouxKse2ztqRBqRgvOiMNokNExiFtlnmsiX0wFTs3OF3yyatH1qn6nr6l3VgZiLrVAWLLOKAd_HUg1X-oUXH2nkAJn0pgZzGVRc%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0DokjHfXWveHMXqghaCbow81kxxzXKEsTra2l9LRjt3BTJxBTYDWxEiiiA4MdT-jkmqNndEJUTDYnEUEH3j7sFPJd7bPSST448Nsl7ViR3Se4D1Dw_bnmBX-BY2IiQFqr_HxmvZ6vRxmXTwAj0s2o2joNkPiPiYs_OxFyejSl3RUhQ8ICoDCDDCouWTd_122-R86Exos2grN4DRmDZ1G5p64KuS_AOIXhRStZwi4utjZdI8gK_dJVGNc8YAMR9al-2L6aUZLpNh1Vw-LsYCRFfwIfGYPneJXmkA3lFyPcJSkDEOyWU76qeD-palusmZVHN8_93icvwtZXLq-SkWkSLJMPd85V1PLf_34paoOSCcBHaQEsFeD17WdrK1vsWvj8U_-3zvbMFv3FWbfrypHXo8DwTmLTpszOZ9qEvftT7s3IRXdlhXO2y5mOCt8Nbysq45i6VNFV-Mu0ljkV1c7JZVScit7rDLPYQ%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0B0ADmPBWDyrO4P-Pvd4LC9q6FeMPhJ5kcUiItLJiAlNRI_nECHIwMlq1ga6jA6f3JNX4yCJkpZauDFDo8lWSvhhdnMFKfre6-gZTBI_ZwDZLQ1BtUD9tKkGQ1guUi4_OCZJT06OXI1qIa-xvz5HE_WvDqhn6K4mHLLttzf2Aj-NpoCKw2CWU_CfhasuQEBftd2Ir_j_qlBob2lfhg4G-8dymDDkgNWlCOjiSBaSvtA1m2dYGtzSfpQd1CPcNdXYDR8WBONjkhAHy5jarqSn7aTYoQcrczQKaOQAM7PnJ4QXJXPaE8nLHuMkU2bTR4dN8TZZxhYcL5c5HZyEybqu1VHwn1mq3us9kssF_HchpiMEn1-LzFBYxvyBlSuAFUhZyRLO5HvOqClic32mlAup7Ki9putPV0tbhZkOhGD6bZWxY0zxRCpsfmwR1Zwd38pg4XlCzcaotX1tsDXk8MBqxCvZ99y7k4kiZ0%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0DsAqeyWAY8gh8d5DNuJ_WHl3qeGrtvAoH-N0gK9ksPB9-kOC6pdYJcZ5QL4FBqGwrQAjtF6_JTNzVDkGHqHAIv9zMMyOTD1kW-sjcAz_JcDFaNttTCFRNP7UuvsZ-i_w5L4Y1vDgVioEj_R1k85bvE7O6unBMQc8jnpq_FG9QAhu6PShKWHejjWEIpwrCXHHeQgaXT3nE61ZdvCVdb04mOIALYo5PF910IkC9O0OEopDGaBq1fU1wyjOwxkQxN2DOm256E0_A-xnSbyvZvr4CvCQMSLmtFYFQc-v3tVAsUljPj8hcKdNOG9z3Q4IJFktrmoiq4lbf28tVRo8kLpv7s1PeRYccP59Ahc9ccNnE7Vrn3ldOmK2ekallVzFQxui_f7VzrBu_EERfezEE9omXnWusrIhg3jcEo-fHTEos

T622 *, [26.05.21 02:28]
jGTJ5aJ5dmNV3eD_PhJk4UcVCfcDYWeQmjayUoE3UfbU1tyuPtxRI8_4%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0Dj9SKomVWgLngh19tXXQ5jOFaGeomVOW5YA3dCYX4KeCuS9voeswAWp-jiQkGiIhDZAX8aPZETZGicJS9sbbw0dquEW8SYN_2nOijRvlou2aRu8KK9Im9_CDceSeegMr6pimX7_CJYjryPLNQDVbZyqpnGyLeaw-yCNFV7vkMXGaz6x9Jjbc6D8qypuoC4H0i3fXx1E0NuSx5dFCzgzJQigKGmMrflkZ1iqE2EKh6nzBrLSw5sMOvSQKqe50KSfY6NBjm4FPb00caOIyDGAraNdkesRAUFdad9AGjKjoDpVAwLPbyJzrTf76PVckCbONWObuZrLtDEhE3JDN7Ny-z0wwHmC6Mj8kAAdU7CmOwrnQYymekH9o3nPduM7mpfoQaSAeXGAUkDVzaOSsK6L_IufZpxdBTc0_mLlwvn__1t4Mn1D83vhUp1fqbXuyReluiRvRjfT-LDAIwemurzPg-9Mat9pdLke5o%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhTFHd9OTVbygOi5cgWeqEK-YY3NeOnmlBfJzI60Ist3IVxlXEmMwU-ymzvbjsW7qbEovzwAEYhi4yWVDay9Jk5FHSoKU9hBczv01ESpYbX3yx-rpX-2_BOMHZkSZG0JLjDo5rMewLOMdPLHyfHYGKcpqkppQqi4vZEqjHsEQxbgs5wPnysfzndQNxWoCP5Mp2U_a8bI1iD3znbqrs2cyK8Cr9vnA52owni7U3smaCitBU0nBtV2RPRpN9rdke_GqaGAvCMI1m7vw77dgzTD1oD-HRPo6Y_k88RZwU1xvvnVN84LOJrpX5WVXgC-vFtld9-wLmJnL4qk4vGzMg0tJqtFCmOeTQLtIMt7uQw-29MwWiKCKv--YiPywlX3Cwz04x9AjnienaOad3DdV1YsBNtT9qdTqEUByoA11u6UhaiTyY6QbNyvLXhJcnHeG2l8RFDv-z8CIH9BG2CKUi3nfkBEmIx8cw5Z1GDpejPzBN29bJ4vJGVcgCshRojEN-13wtfyDa4AVfrAO88p_IYdg4igOxuVJWMaaKk1BfJzarxuBbBWmoYt4crWa4q9CQaTr2PWhPw1lC_kOx3Ep2Cn_rQlMgvc3axdzzvIt6d1ijQUuUZMxwO-oLv0l_23YImVIUweQaeYKcV41RqVC-gP-Vn1rzou5KKqy-a_Gm2FD8XgHjgujlT14EUwU9FBfpYbuUB4LPvJQVfsmhB8P863omXcLwU99Z5Ld1KSgxxd9owq08%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhTFHd9OTVbygOi5cgWeqEK-YY3NeOnmlBfJzI60Ist3IVxlXEmMwU-ymzvbjsW7qbEovzwAEYhi4yWVDay9Jk5FHSoKU9hBczv01ESpYbX3yx-rpX-2_BOMHZkSZG0JLjDo5rMewLOMdPLHyfHYGKcpqkppQqi4vZEqjHsEQxbgs5wPnysfzndQNxWoCP5Mp2U_a8bI1iD3znbqrs2cyK8Cr9vnA52owni7U3smaCitBU0nBtV2RPRpN9rdke_GqaGAvCMI1m7vw49kdYKXDkapzyOgvKcBmh_nPZGe9rcIGYPBMCv0SsDoagqlHZz8HtvntG607J9ZfxrVU6fB_ye7u7_02fEVSbOH07vIRy-xKYIviee8pq4iYB4yygDhPP4WSvBf1LF06nug8WbsosuXI4aNH06b9hwIJXsBzglzNoSKv19QzmZd-boRo3GoBRwlHu56Hhc3KmGPNsGSjv8zx2APs70GVNLUsz35m0iBBFXt14pBiWg6HvxuS1wQOPThRIUHATxeRApA3pNqOt5l_Wp2gJzawCZK42vYj-maNYNdi4RYnkdrPXhTDWBDo1F2sotUhAby-u9sYUPObCdYpy4SYnuhV1Mwh1spXaGnCVkh8fD3C3eNNGXFGZGPjRdgWOJrW_X1QglL1pqMLsuzotTD6KsnoZ3u8j8n9vzgifJDfmAqqCAarkvMz1tZVZjTXtgVdNg6tdb8pFrTq69Sh6lel8cosHJi-HvaZsxUtk%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0CEc2-RZSTFfLnFsxgzANHZf3WlhIMFeh0sVJ_gk3St4YFfL4KFMWgZE-YsL3IiXiI9bpnNklyZGWep4rN9QsJK9Zi6MvNSuJrI1DxJKm8VGUABXA_m7EoyH-aG8m1JpIFcWBnooGTv2PTu8oUpe2cK3Prq0L8IWBSbNgqePHvHhNRKGDKrWVQSZUJcnlT45eX1ah_M8pFmYmCaRjtrv66F3PFUdJ3_oNmVuTuqwrQqai_cggAqzalFOfEvNSnasAkqgr6xkR36_J9LV8NyYlJvnkR_8jSAuASU4BtgBtCPvWiEYqxGk6v99iYBRf-cg3peTvlUpFw0Vi8A81Irp9arIwa2vNOpcKjeIgK2HPjiYLXGyWML34ZINQKz6w4330rrw4cUZYwk4Cb5DzsdlSPgI85BOTWzi4PRjAfu_XIxWpTEtjshWUsk4Gt8HnZJx2jBFXSGqhmToT_nREST2XI6jzsEbO52Dfk%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhT9prvicB25Q8cKBkQA12UrqCC8udtdPKA741oij3vUGZ8mBLOyImNIMH0oAf8F41ppWbc7m3Fm3llz2UzyAwFKzqy1zuHwaEImZ5s5pTlwKZRNFvH_X3bkzt-q3QgGTKGlqkIXJOG5_ZKbFNBIHacq74mzvRPrdcCb8qXuYrHFs0dG9FCFdSzzvb6YLcXWOZ59Cum7UY9OetOFjW-mAAGaGBEAVzDkHATCbnveMc731EeeT9peXPnxrWtDyaxOeWcr_xrxn1b6trr-HnceuoCFvBvQq8MGyI3KgiIsBN3gPxoGQCh74Ikzq6r-EL3OdMXi1hQJiLegrCFD7jLvsWKd4WVY0pIGtxpD1LZdvxrOpxCzlkrg-6qfxZPiEitEPYx2SPRpG3MwY75hnWWB3XZchYy0IB-mdjNPQ0z8PEoLuIF_8skrytDY_KHSOrFxufUDP8QGQDzMuMx-Vx7cna_hw-AXyFGmKOX8Rq4Xj1UCbnseooOEq1dOgWHOG2O5gLHLJcbrtJZwle99e6ZTbWMJdbvDhTOkmDrroxLYMVC3c48RSk4iNKDKWc2bWVbw_jLeWk32zFXoPe7ut7LfXaKd3_42OoBhJ7Su3895WNSa-JkcIouID60d_FW

T622 *, [26.05.21 02:28]
1cbKOsQVV5cQThB-NH60gbOtF_QuJMd_kt79fcmM2Awz-i7iQiT6bausXbnZ81nf2XE1JeMYdQZTNA3tVK45eoUsvoRJL42SA8utkGqiFRjp06YKCO0%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0CmE4uELPtlu1ui4bBavQWvusFCfZFcHBbui6t1K6hCi7Js_hghnBFm6_rXjP9rzHBAaQ56qd5iAjyli8yhsvVUk3rHvUV8zSPxyxKqvh41qHIwd-rjFfqB_oHdKXFSZmrxxtk50b7Yru1HTTsvagpfbTNh0kssx8XLU4loOIN-MLrnSgTF7wPvQ1Hfkbfbzkqli2x1AmF4YzAr3hCrt0SkxYTErOZnqI1NreMIQ2NdfaSPRGm0DZKCOLnGeQZYmCs5h_krD9YNvfBxzMAssWaPHvFaHsGfV-7w6sky16vDO9WCLZg5x92TuIRocW9X4HlIkgoLsk8bkX8dEsUB1VP4pkIh74-RGvisg3MPfXFVxUBAW0GfHzBRUoA9HueOtmfJ2W2ew31o4tYpiV_g7pPPdysopldbijnbeoj-Rv9jY6rTxHKIQvQQ2JkX8G9F3uRSNoApWJJLo2HZjcllvfZjIcS2rbOB-mU%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0CB7c3FQWAhBOnj4wPnC5tIMbeXThD-XpVltz1OYU0fCSmU47xD5i-HkkYlEYLQcgs5Jfi6LCXsiUcxf-2w1h4FEvoxMngsKrMVTbHifQKxRx53VPyYfasHCPBR2-YngZ8uf9QEHRwaNDpWP_ZwjGAWaI-BrtlI0mo0Z7Uq884QjiVPNPUjIbQgS2wrMz9LphI72JAaaNWu084MNuc8F-d8YVclz0suvU2qzUCKSggrxtDy1LFw6Jbc5CezVrYTRT2DDCp1-27744T64iytoKULM8ukzwSyIHY248RbUbeO7zfsyUSdxNPRK2rjVMVv-m9Z3Ip6OAFscoCZmay90tEhOVNdWkoKHJWnz7FB1l7MOfQXpPJxs-ReBEm_vWBDn6qS0_IOjDZFMYz7S7NgBgREc2LjmbizlYmIilIbc9W93FPcN8olVknK3B4Hl13XLLzic6qb0JFMx81fXUxE5bmC700V1vTU0is%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhT9prvicB25Q8cKBkQA12UrqCC8udtdPKA741oij3vUGZ8mBLOyImNIMH0oAf8F41ppWbc7m3Fm3llz2UzyAwFKzqy1zuHwaEImZ5s5pTlwKZRNFvH_X3bkzt-q3QgGTKGlqkIXJOG5_ZKbFNBIHacq74mzvRPrdcCb8qXuYrHFs0dG9FCFdSzzvb6YLcXWOZ59Cum7UY9OetOFjW-mAAGaGBEAVzDkHATCbnveMc731EeeT9peXPnxrWtDyaxOeWcr_xrxn1b6togPoyiTrAlGK_prj2DxmxOggLqQcA-C-g76CWIzQLzt1qxR6Wx8PUlLFsUFDO-TlKT7eK8XXGqYCVauh9SgXUFUiRU_uD6Hzy3KcB_Vt0KmuY6EGkAFnRT-VMGmPQPnE527YwO94cTCfEj-RFoKzO7RaWAh6f9W7isL_KEKmv5V9wVNC4D7ny2-4aLfZyqhAGFy9ZMc1ButQK8UBBFm_82Z17a-ZwnOUNJqejFaZY5pTi801Cn-vmln517SyAa5G5lZoh-HOLqf3vGkGTdJimyFgaqXVMzWFIuFXMIX_GVco3WcdIYTHod7QDNUB6fX7f3QbWerGDc7Pr4xyKZwSoF3y_GlFEQVbXIYCDflzO2rztIWSZx7qXGQr-etqfbdTzIrM2nygvrBeSY8ueljrxNhPQGDCVLmmPVsla3zPgnF2LBbnNlR647jqUSkE9ij-kUbr8FeA7A83ClZ-W6WISq5io1FbH0I7A%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0Cb2uR2QNUEQEr1TwsKOrRWupK4oTWQerDRUZ-_EcTU4eHhfOxuWNXJv625QWhc-elv6ilviPUz4e3gMxFqEluoRt2V-PD2YSDmm9KjN6VBp-g7M4wbn_nZyI5Ul82o54APPqtIlMN0SZcdYUS6IGfRhn7RLym7uGLdDlWHVyT0oG2aLRXXfnxZdtA0SftI4IvBz1tyWDRFjLpjFUc5LT0Ej707bxnE-x56X1EY2BDNvwAUk-rJ-xYdy6fANtimtmc73opt8r_doKxdV1YzybzDg4Xj8-ey6F-ERy0tvSCeMl_SfEpg2uTT_rGAxab_bbuuCxLB7yHk0xQtpo6UWc0xpPtUWURyicKdyPWjYyDKr7Naqgi21opkOpSKMEzt5Ej1R8VJN-9YKRUX0hA0sLm2anmcebLdGAzgfpUJ_eN_YGr4AkaTj7T1_xnDPN2BbYVSsmkugH5nih63TfIe_Eb86gl7Rp2oAvI%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0DezwFRCiGKRcgGhXlIMK4tndUCV11FI3YlqPDJ2Hd-p5JMVH4F8nXd2x3gy2diTtZusrwkLsvxBC8BQ4YUY0L5xwYnQP1hn9lxZhDdTFg3obqeyaHlazI7MBTn0BdKf0tHgad40i-c6QLzdnsaDGJHFKa27w2GxDmlgR9DQCV40KFQ2q91GgmY8Q9_cA4WhN3sXl9WKMtks3J4At7DcuM_oySDI8k8ORDlTdvcLehasbW5G1WHHXVY8OG2orw_KPKjE_zDQHj_M7vzxfGK0QflzOCN-G9p_E5OgnZau1N2Uy9Bx29YG

T622 *, [26.05.21 02:28]
rAjeCbh0Zspk4u2vt0d420Ixgl1q4khZjQ9upXioo1_CPy_SYlVDsF7eRYbfoMNRjH64nccla4JpD3Ii7Y7rPbrxDRQoJcakmYSi3TmsD2ZgFGFpERIY-UYMXKG25xqDRPcowiiTSYkZq78zS5Khrlcrg_ZzaotZmmU8oHj_DqGzK4%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0CYxkw0Bn4DIVH8q1zvzMnt1_8CP5mzkAVgyNNz-aJZ7YBtJ_6-7j_34KvtIkwWgrRyIE8EmDTyDhDlzIso7h5J2hqFDGvU75dZNtIySsZe1DJrJlAa6HH7whBHGbKEQ00ZUqsSmX__zrSsJiqB0hHnV88YGEaOMJykkFV-JQxawaQdHztrECRqfkh_lfqkYrG3ECYJeHeCJEc5IIu8krvlWRupjzcpFVuvNFRbBqy6GnEj75xWg9ojHNyxPpLiEaZwfmKjQFFmJE99TALvd8xCBFcrAF7edS-dXwQslU9tThGf-mPFIIytvMgWVvE7UynX1l03YZOYhSg5vnySwQ6XRf5_d-sOSWpHcESwBC2UEsMITBYRDJcbS6n8qtJe4d3KA2lkRxNJu32KRlmM86F8ml2JQuq4koIBVuXhxUZCDj-NbFJ6lxZXAvoj8bIxUsmKoHWuDlqwOeJAZmaXnMNSak-Rtyza0yc%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0Bzvg6hkz1UGfAfsyXcxGE6rhbR7cafCXL9x1bLGjkE2cr92Iti7ouNtLsEKtonbtwuoMfSpb77VceCAcpPJpwgOvut2mbdWeqeSp0WtZJrEFSX36voXaxJ8fN2QrVQ3_sXs4342D67NwmqGOshv1wjw-5OADJ0Xw72-ZDoXvYf2k7B4ed_ZO5DBlfI4LvYhFiJKcK6fdIqn7ryYU8YVsstGbZvul6KrdPeCUE4S-JH48zNnMjJCRFCfUIrqUlNPm-LKEEccGFvlu1MT8nqVKkMpmbZqpz7E3QmsjUBAPqXIqmN-OgqNKAA0se7aETprD8QJxr9d6cktYWJhElq5xPNLaRbiR5uJB3kpA-jWLG-75JAEv1HkPlx3o_St3E9jdlyrl9REjVzgoeO9lmYKPasYZ9oyksXA6I7tmTUFNxDkbsFos_7JOR8EvVM3dxRVtioQsIjfoRQhAxGvaWUapCnov92jGRLT-Q%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0Avtjy72LIz7_h2yJMvsi2bY_x3D8GRXlSYJDOknHxkaqBID0_nzWUihJDEsQgDH_1wLam16CwtSPoA7n1XTUhf9GTUNg8JTHaHF6j-PYqJEiu9RNgW3zfMMR3Rh4jLMjVJXWjOUVTRDlUH07rFYgDNK1x__UC-yoxjqvqj3Ho_GS7t1YJbikU52ULrzdPj_-4Ly9ZcM8RLXILSMjN_bLB15_zzREg8uZumpNFZ9tsF0YENSxUdAKp7VfuQQOqoF5aZqpsmIJO3I7xDo6YMd8Zpkl1_xLbPa4HVG8eyJRd3TzOVeWwdYzVfzGl-18h_B6m5br5Kjup-I9nuCsS8PltYplReNWxZr0wkCY_XKDMfkT2vUPYGtUVldUjizR_udXR61rwOKzAl44Gd-RwjVR_XigFW8ONihBxh6_2SpENX9_DiAd5oeZ0XWUMZ0gW2kTIee3QqjXm8QEwKZXMyzrbW3EjCOgA6ndc%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0CjuuRhU_qrh0yfkLGqGT2bhyu8uKX-WHMAoSoX6R95yedM3qKZol0d6VuBkGoTwzLKxKuRqs9GTBEO40zBHQEMOX_fJpT9QFBZe4LWLgsGBMeQklBvcbC0P2T68CO4p8BK9QH0Wl-PK8q_tY1ZNgXsEwuFHCgO0-UelgPZrBrpNPB4RpZFlyzSOFFsOnTlHYjFpsAx2bZWnBrRl01_hIHcowYktQJHKUDAa73Mbv2xZGSOrTiRlhbE5t9iGLaW_VYTulA2PvEFw2Wme3zDm4ejYTr-3GUHVLcQNbdeAXzIOrOs7_42m9egD_lxijMTwwW2UG_FYwSoT0YTierArrJ8t-KaXEKheCT85ihRmWaRnwn7Nqeb1rtoSK_fFPF1pzF5-8juwWDR0MQUHs1_vqE7qTCT4CiZEwEhlU43g59ccigYkW0ETZSRmIhcn9R6LSFP6vga6qr0np5twGbNX5yXwtgBK91EER4%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0CCFSmPDwISAiuUuWPiITMCm-GCqL48IETTqKOBf9l_8LfX58yjD0o27w0G4lO1MoEDcrqpQCgU6iLw6Y1szFug9-gMxEJdmK5aOrqZluVdRrjWVSZeJm4-GBCk0Z-GHr2S3nBDWCqIHhUbLdS4OhJAGGBryi6NJPcS_DU2eRW7rP-u7xIJEq9USE8P2N7zxgyC-EHO5uNHF6jTtMvEdfxPFz14PTPNxAws_i7Yp5LuaLlMAvrjLvu81f

T622 *, [26.05.21 02:28]
ke_hdrc_8BFm4WrT5gJ3MLvJMqrTIjVzf1UqPtIJs9mREeQuxbXRXkjE8wMBsbDuefStqbFZpd5_OlslPP9T5zoUieZIgokWzk7hqt1UFDGB0yfHSOvqNYZ6vF8-9nMDVZIdkWUsmFzX7Cii9yq9hq5fWf2ywlXqqDGMK4hRtUnBQJ2XToLl0Nsj5CfggYpj-KOgHJDthN8J3avEusJ76r_wpXniFfKEIt4D3sE64%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5ruNJOVeQ9p0BVdYnqmFH2AqKVmqFFKlnVN8PdcasQC8SXgzIIQKiymGYMF-UdYu5v_tZzpT5G0hXMkABt1VGys2ua853w79WAoOukZjrUwigyiTq3hr616xeprFWxGFJ3dIGg2G29YIWPqxuIIFMSnIw1X3TlXsWjpwLGidRWkxbQWmbQp2fiH0R--1j_BmOF2sWNYHU9Yk7m_I6ROTLFc1HQkzRx23YFCPTttrDw69xPoim_3sIeJaKI89gwGQrNNW64jCS-P92w-ipw5H2WFxMhCeI-WHyxKl9AEwWTkJCIQCwsCaa0y7t-Slx8OaLstALKNx_pChJA7JPKdWs0Odb7KE5k3UarMmFO-tEtT7zWm9fA5Q3mxgLlFr-Tr3cny8TmNMAD9M0GwidJ7R-nHEmmGRj-uEO9zmrQZoCrAPTarzjCLIM-zM3KxWW0vkULeA_Uw7Ci6GKjulJskPKRQj-zMRpAIoiaFjnoD3TKE9g%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZCtYjtG-pISRI05IOO_tWwKsjHS2coC8oRXfSq-9lTAagrC-ydpEPghdlY8NOPcQv8F0Lahi7CuB03j1gJr86JaOW7ZzzZzjqLuHW38aqQ37pAuTLrCqwSoWUr1K2_rC65VVW1xGBbhp8H1NCH5dAxL0-BTrVrQCLpM_t_LgaWHJeFnSzK8eJ7LGozguqkCsziHhxMxfKXAYhJue1lBbdG76RiMQg46OR3v-HHT_ZmtD1FjkuTO_ZtKehtky5QyR4ayuspJGudbnDIqj_5mKsZwthU5ruGoXE81ROcUTjv9tHhBQvhQrWpFSUx6foXXoI0cc6EOgcCqTsWYfLoIY4gzOe1qM2qTZST593ScI3HHbU5oiNPoSp1TP8otDqc2lVpYhQ6fERMFwXok2Y7ccd8WASedIgCpAo12fBB1hy7H6sbnYNp4RzUJ8728j2S5atAK6GcWjCCkbHXQMIKYbXWVZgVIDhIix72vkO4iuI8KqxG71AS6RtQrCmCuKhiyJHzZYetTQkyHkVajZLLJOhIs1n7JJ6VIuAEb2pttvGJ5SlMqgHPlJ6tBSS9l2oX9kQzjEt1hWq2Cd9eVW0YvH6uaImedLSFqNRPkoOhYqp5Ahu18b5BQM0A3rWgAElp2R5q9YNwxE76VolkhqcbNWA3sA1MaxcGFY7D_TgR07CCV8TS_qF0iMwu8SOJsU8IR4ytoVqaiIQuO5MYVhG9mN5-u0RTZZ45ScvoFeI6TfbPVL&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq5e_X5ENhSENg1TAOOmvrQyXBRzV6roNKrIol6HvSX4HLdCcRkb-yoLnLKui6DkZFmbW6ot6AoXdqMdt1y2JSChVrH9aRECkcNk-6X68xp3PeGQPgtrjXSCLthVz3u49TXIT3cRjpoPLZ850TEhJKAJogZxOcBkJafkxNPmMCBUN5Ikb7DmZJJfOkDM5WKICT95rw_AWVvZlpuqvuJnYYbZOdBUx0IUIso_FzL3GFGtGTFWGrtcP8o87psZEEFsSds6UIoya4dYP5LNH0gUws_AFZSFlBzOdEkXGmFVtTad52HmckLM0LbRvNYwgEMau1ne1aiO81TJJ2a2o_b_kUZNgQqlo6OloLbB11pwYiBvOZeSl4dce9IRwRahPuYfM3uZufL56lQ9RDnFf1LHdfbwRyY8_tLdP14byXdksbwrncHCANZMatJNwNHgJWVNyKCix5YGVoRxFW14rQ7WLk5Qycz0peaaone&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq5e_X5ENhSENg1TAOOmvrQyXBRzV6roNKrIol6HvSX4HLdCcRkb-yoLnLKui6DkZFmbW6ot6AoXdqMdt1y2JSChVrH9aRECkcNk-6X68xp3PeGQPgtrjXSCLthVz3u49TXIT3cRjpoPLZ850TEhJKAJogZxOcBkJafkxNPmMCBUN5Ikb7DmZJJfOkDM5WKICT95rw_AWVvZlpuqvuJnYYbZOdBUx0IUIso_FzL3GFGtGTFWGrtcP8o87psZEEFsSds2OWlQXAcPdWcZM0Gq09eC-mEObikGR-TuaI-2rrL60R8Q2TzUJx54ztFACaeKtuWL1chbbYdSpgrE8LciPP53ni3kHfTQzKiqb03NvZhHRNzSkSe-wulKTVKVb9kLRJ9vfWF2J1PbnfDZJYduxgvJGCRIE2yueHMOL_HqYn8TwK20fbYf7QzIhB7oNfF52DAZU1TnrZc2gjjt6lkxup_Hv3jxYqyYSQf&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq5cwTN287Q9r7frDf_ouO_yaw_4zCgSq_VO1OffiN591CgRvt3B8SWbjMeJcFt1rpWH-elIjQoSbQnyuDvtxzmvHmWqYekjia60QhezJ9HvR3NTeiId-h0g7wyKdTowxLgAtjSh6pGqW5ArzWrSiI7FB4pjYeuhhJNFZUjydFdNW-N8AQk6dUSZgkiFgyMA8RGr9tVQ7HizAmr1eanBbhRdzeibfZH-l1A9CJ5l9b1MR_YDDDsI

T622 *, [26.05.21 02:28]
BYJo_9vQLgU1jTUGndEnEOOUWRuhfKzJDFoObZAS4mMunjMNxhDIrlrBLGKWsQGMudEDAWZxu6xdMQOhgxMAVgFQASU-kcc_9as-pHfQtboOJfNiGQoLDZkPOwdDEMaex8zCJ2JqlufwRA0CxGeLyRwuiUMxOewUVqHCmBkS85up1UqymSMliMlXQLJLfqLdC0bFcQt3cZR0ROc5GQAsZXFzRLy_4cJ-LpBWMbxOfuCKnLk&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq53MJjGiq42qR8AzQxfMu0NC5AFei6FNHGPSZ3FkbMK943zbIMa7md6X4aZe4S6VkG8Sopnx4ud7EPKi_T2C9W9PPqMj7tMevcrquK6hvP-5HfRumi9BOoZSMwsdp4otSRmzSoHH09Gc-4O0SWJkZ_cwuyiKDNVEQRVP0UoAJPAt9X4EWGb5F8agQLXoHh7kf85lIFlgq47qD5fwCZDfeIFncrRgr5aLFbrd84x0c-dMHoIfuuwHnlo9sxVlxnQpQANxnBZOTarJoZZVU_Wp3szafyZ0M2_uEi6kY_cFOKW9aV4yGRRvIxonhr6istdROoDzbvruCirT9XISSsMIKs-J9m6XJ-D1RX_Sxw_is49BiBXs2OBjFTIa_NPz_mJxlxsieksMCWLICWlhqcdcGH3vmaYCzHlw8ro08eR_qtQgV8I462oR9D1c6vYP7Goiz_wBj1F0qZr-4VHpwlOYLEjNRWTOMFW-EX&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5rFszJooJTNtIa9SEwZD2y3UpcJopzAVXvD-Ku3oq1E8J4wPGIFQkX6BfDmh3cyCsAqg8MxnugoZr1nggTq16BSY56J-QGi1lOvKEc5-ev0lAhueFP5GOztaaZzGu7Me-6aLD_l9gVSr5CjmfJpX84qkC5rwAI0waMWlQqow5geZRdwC8Gw7kCFesJGMxOsRn_0FTAz9OUxc9MNhIrLQVipZeEynpBF8t23GZp81x7VxYRIos7K9UnHS5ZHg0VyRmNsk7mWPE_GmaUP3DjAfnU-JcXJ8ouGWoIDH-7k5JDdHAavn0Q-vwzhI5UEmgoKOhzD-tUZPmg4Io51kGZGBm7k8oLl341Vjy5LgkXCJ6lcMYwr5U0Ojk9izgRBKrtYkt-24MJZCarFSKTOul_YxxbQzxaBEU4Z5GZDx4D2gyeo6HBt_hLJtK9X_W1vW6rP2MYVjrat5AYFIv8gvfkAhzI4mNnhPaJCjSvPkBcu8QlhwSqAVEvcUEkSQ%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpYq0SODU30sWUmXKwRlV1_PNO3AenhhmeeFhs3n3sOsnWMCcLVVdIFD-7vPP-e8TpyzWOAnF9KvpI3f5dLZ7YNEot9mUnk_EVsXUGInyd7k0qhLVC-6al8zN4bvguvBabgp10-eCJGci_0ueN0fYe5Z968Ma0I6Xg6YmBi57i0yMz6WK2OlPiKHDP-QmCCz-A7yieDTLk2Q5T5GD5L4ONG-JHDHPCUuENQxocOrrlI5tgAcMLenyGpqkkGNVLQb5rFszJooJTNtJwc1VsS4vIl0BjG4BvD2l1wd5_BglFK3dI6EREoQB5Qw2Yk03uU1eyauuqPqTvBYKllX00W3sUh_puhEzAJKB1l0QBNga072ILkusYaajn2rDh3YEz5UdBv4ICeLGYH44vQBdaErDdmcokfrjOCOxpLR48HwCDxHOr6TIdYrfUgbRzBpRDYzt-PsyKKydxY1Kytlby8_ev8BiRU24Di7lBOVwchj2SvK8tg20Aaj2kN73GYPWubzup9ZTLlytsirYsrCIurXmTEzuEMG-140UNPiok0Z6oLq730jWlNBuEJVSZkagkxkpX0MeqWwL0vKbjK8yUjpZtTD3f95L6pq7DYRZWDNgWfr2_oVJUKhYwE4Y6EklGN7JH0vv3h9PC0hhTFLuWLyhUco1JFj3Cc66jcvpCmx3_vW1Jyg_Awd2eTSsz_VomDKQAkh7iS1eX-f47ELBbD7jfRTVRs6E-fj1keuaM3jz1LjmiP25NVdeerA%3D%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZOsWSIZt8IhT-mY4dpnvNbaDUz4RWzz1ebxW60grLAHaNSPxUrVSKo5wigEU_up4yo1iWBMy0NJxMhuK57kw36FUdbOCnD5qo-FT4K0D2SWi8oSpCg6he_zY33BTcwoKXsRF-dNsuwWDf4XWNPm-COT1DutQQ93QD-rWVAcAyODi78VnoWj_ifisL-Rt5As3JtHaAGByz-P6VNnUQpQLNZN9h7mdef-Qk-7ePzCo5Q1zR6m4votkOTo2qWRkAEn4dAfvdyADfOe-tXJDZ9Dn6TAmfdaBc8tw3c3xcL3O3BoZt_RI7_CCRZjdyTUpBrMrrR7VI0FNr9DWfYnHh_q26mS3rQt95GIrSoB2Lcsrepe6lDSfF7WSCu8ecpM6cV4nDWWXD-r9L2GJu0khYBFk4KDjvBEa7ZQ3Qr6C9FsrocPASLiUAFQggYy09HKfjIZNcFu1NSB4aswO2x2CRFzIZRqxIF27t2lpGuwECId_SNMKLNj_1KGrZYkQUsgNI12Bt_gdu41wnOJLoMcZqkBO-vlaSRDE_prLoeQhDwiRtwEPJEPZ1y23saDLD3_dorCZNGQPkUuP6aJEVhkDTd7rVLPt_gOCKonJt5rG_AujLkDMtv0lC8NARfxxlboZfDkvl1EuPFJEGzQyy1boiuEtrACeM1vVr_WNX66ufUQWA1YU31KZ4-hPn6Kmbp667Md1ep17yoT94Jroic95AunZuPmtyDUvgEtksSPaquUV6RfcBHf9hz_664o%3D&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq5vV_-csWUu4ToGMvUyNf78DNypwX-7dSKCxQmWWdxMUqewYu5jZxF4sj0HiribH0Fir-klLI3PPk7p-Zl1gyy9C8W-KC_OJLgtay5aopNB3sLWaLehNKS-Bix1m7UC8lp0CW8pFMzbIALaquTGH0GmkavdY7Ww0zR9eri5NLwx5pdc7_R2okPMW

T622 *, [26.05.21 02:28]
d2p35rITiX60Klo4gg-yMCc_x1V_Pj00CrppPe9NxfEDDydeYW9DnU4Xko5NFTlCg8M3L4xFhoRqJYpim8NNWBp2xbtrCRLM-GMrhuwen07R_4TUqoDaUFs0aCgfVbA4bgIduuE8Lg8MCh2s6r6mcgz7WQdLvMBrOYKXtFOWUFyS0Ct1leWYrkxUfB8ohETwaaQutDUzzp2wOnPxgQnKusogeTEMLsr8r2GamF3qRdGdlX26CIxDH_vA2JYF0dG1TjzNCN2MZZTfxcb-a9l9CwB-PBTQ3Q8KJ7l_m7URAl&p=9NwGV8Ov71o%3DgW5NEpb6rjab0hHSxXenkWHSkCwB26b0x_gtnWSAWxe4W5DsfKJWZPHlhgQTFnkpgyEyTJ158dIT8hmY0FdqVtlGtI5dfqxbxc9Q1SQWJbyHkFzp_KQETXKqsKixaxmCN7yfEnKZrESt7ndFSgLMKYRvIXAyRrRHqxm9cFkcEmqYvPlZ_EumsIbrLcnC-cZoxq48ApskTSV5bRjtBqCINqOCiD5OxzlfaZrA0TvIKSgXk9iTN1eGr_S-esTeLP5QuYexvyQp5oQu3FzM1bXtI3LYSmOpN4O2KCMjP1DAB00J8CGGjAXbRxhdZcwCDdq5DM-y8l7QcN1QM0ybUuScYVmk6mjEOoBxW34XD3BHFepgOJeAcPM2oxQbZrUha8uKsGeq8_LKUwP1Pruss0_WsIW2sksOzSfHTb6V545QrHZBOPWAVm4mWVo8SOMEsRRcqoGJzpr8kDnTt4ZapUl_cf1Ry8DI9yTg1oiYXwYlEaiH5k5SELjw39jeLEZ75JUiVxqfKGdAEZ52krlmkw8_ZtnfXvRi4oBiql0qLtDhmJA5f8TgmpXPYP8u9UDQXCv49dc6GG6QvponzHwjNZowQp6kg4fNtSefN6Nt7ul5qEIS_NHc236EYorqpqEFcexOt4B2h1vhOksoGP3hFrc9Wp9AsJBpQFAWdRIOtiM8sLZydnxekkDpgTPsRbhEUGOGIeeSXyXAdIoa1Rcc7TX_mRf3Y3WelkWOEWYN0ZazPMjAqKvf6lFH8DiUTA-RoYLZArzg37IH7Ip1axQC4gSZnG3A_xGBNRAs';
let readTimes = 'p=9NwGV8Ov71o%3DGvDnjwMsu_ld4qx0YVkhCGSN79Nz9uYVd_6x03zS0fnS8kKdOyWyDMKSICaFBvwH5U4nsR_vvJsjHH2Z81CBL7eyJjtPmVfyM0x8EAsS-_ESh4-JImy11uTAadxMJCYAdD7P_w27pQt6_tIUTgtnDG7LOKwRL-IZbYYNciqqQLLc3LO9bUiYviAPRMxgmQX6ztc6qPMqklqeY2cPO4l9fG11ToTOhOjbJTwS_nP7QArXycya73_9fuvoCDvYWbYpnLb4Wf-K8IWUU6oBxWuKXXpm7MygS5-qvp3NL8Z3oVW2jodEEPep0J994mIJKkXTZXungsPGR7uIaMfpNl-Hyloo5qBKxCiXpyvPbhhpAKk2beB4oQ_5V2wD9o9Z6OFcPdyVEHlboe4Zmn4cDLNLftBzqYodizL4SLO_R0QYXl7IL31EWfo0dWf21hAVRbx5J9UJaV-fpRQTeW9Mlpqs7IsEEhrGJDAsYg6LyiuCD1m95iO77IvDAR1jb4sQ14yP3pWoPlTREyIJXpTfVf3Ygrmp1RuMExBb6oPLS40_2MjdQzs0AlLiRpmPXE76RFOy8j-unMRKUn4XBTXXONyjEovXpeEBAwivI1r-Tvpp0dHJOMu3gpToZKr144WsMPw2CLfJTKEPxFk56f20IiNFADFtE6Q7fvqHO1-eac023ihUAerTS4NfmyQdctz7zYIpQkVPWDwCI84axkPPpEq5cEqXKotir_Qn70mjwJWAEF4APG7SHxDa5mdXE3tL16EB0B0lq-ttsmp-YFLpJCYNzbxt10CwiA-PzeABXxU6iKYPL6K8xgVDZaE4RCd6Er4w","youthheader_zq2":"","read_zq2":"","readtime_zq2":"","youthheader_zq3":"","read_zq3":"","readtime_zq3":"","youthheader_zq4":"","read_zq4":"","readtime_zq4":"';

//声明部分
let rotaryscore = 0,doublerotary = 0;
let cookieArr = [],cookie = '';
let readArr = [],articbody = '';
let timeArr = [],timebody = '';

// 脚本部分
if (isGetCookie = typeof $request !== 'undefined') {
    GetCookie();
    $.done()
} else if (!$.isNode() && !cookieYouth) {
    $.msg($.name, "您未获取中青Cookie", "请进入任务中心获取")
} else {
    !(async() => {
        if (!$.isNode() && cookieYouth.indexOf("#") == -1) {
            cookieArr.push(cookieYouth),
            readArr.push(artBody),
            timeArr.push(readTimes)
        } else {
            if (!$.isNode() && cookieYouth.indexOf("#") > -1) {
                cookieYouth = cookieYouth.split("#"),
                    artBody = artBody.split("&"),
                    readTimes = readTimes.split("&")
            } else if ($.isNode()) {
                if (process.env.YOUTH_HEADER && process.env.YOUTH_HEADER.indexOf('#') > -1) {
                    cookieYouth = process.env.YOUTH_HEADER.split('#')
                } else if (process.env.YOUTH_HEADER && process.env.YOUTH_HEADER.indexOf('\n') > -1) {
                    cookieYouth = process.env.YOUTH_HEADER.split('\n')
                } else {
                    cookieYouth = [process.env.YOUTH_HEADER]
                };
                if (process.env.YOUTH_ARTBODY && process.env.YOUTH_ARTBODY.indexOf('&') > -1) {
                    artBody = process.env.YOUTH_ARTBODY.split('&')
                } else if (process.env.YOUTH_ARTBODY && process.env.YOUTH_ARTBODY.indexOf('\n') > -1) {
                    artBody = process.env.YOUTH_ARTBODY.split('\n')
                } else {
                    artBody = [process.env.YOUTH_ARTBODY]
                };
                if (process.env.YOUTH_TIME && process.env.YOUTH_TIME.indexOf('&') > -1) {
                    readTimes = process.env.YOUTH_TIME.split('&')
                } else if (process.env.YOUTH_TIME && process.env.YOUTH_TIME.indexOf('\n') > -1) {
                    readTimes = process.env.YOUTH_TIME.split('\n')
                } else {
                    readTimes = [process.env.YOUTH_TIME]
                }
            };
            Object.keys(cookieYouth).forEach((item) => {
                if (cookieYouth[item]) {
                    cookieArr.push(cookieYouth[item])
                }
            });
            Object.keys(artBody).forEach((item) => {
                if (artBody[item]) {
                    readArr.push(artBody[item])
                }
            });
            Object.keys(readTimes).forEach((item) => {
                if (readTimes[item]) {
                    timeArr.push(readTimes[item])
                }
            })
        };
        timeZone = new Date().getTimezoneOffset() / 60;
        timestamp = Date.now() + (8 + timeZone) * 60 * 60 * 1000;
        bjTime = new Date(timestamp).toLocaleString('zh', {hour12: false, timeZoneName: 'long'});
        $.log(`\n === 脚本执行${bjTime} === \n`);
        $.log(` =========== 您共提供${cookieArr.length}个中青账号 ==========`);
        if (!cookieArr[0]) {
            $.msg($.name, '【提示】请先获取中青看点一cookie', "", {'open-url': "https://kandian.youth.cn/u/mhkjN"});
            return;
        }
        for (let i = 0; i < cookieArr.length; i++) {
            if (cookieArr[i]) {
                cookie = cookieArr[i],
                articbody = readArr[i],
                timebody = timeArr[i],
                $.index = i + 1
            };
            myuid = cookie.match(/uid=\d+/);
            await userInfo();
            nick = nick ? nick : null;
            $.log(`\n ********** ${nick} 现金: ${cash}元 ********\n`);
            await bonusTask();
            await TaskCenter();
            await openbox();
            await getAdVideo();
            await gameVideo();
            await readArticle();
            $.log("开始转盘抽奖任务");
            for (k = 0; k < 5; k++) {
                await $.wait(s * 1000);
                await rotary();
                if (rotaryres.status == 0) {
                    rotarynum = `转盘${rotaryres.msg}🎉`;
                    break
                }
            }
            if (rotaryres.status == 1) {
                $.desc += `【转盘抽奖】 + ${rotaryscore}个青豆剩余${rotarytimes}次\n`;
                $.log(`转盘抽奖: 共计 + ${rotaryscore}个青豆剩余${rotarytimes}次`);
                if (doubleTimes !== 0) {
                    $.desc += `【转盘双倍】 + ${doublerotary}青豆剩余${doubleTimes}次\n`;
                    $.log(`转盘双倍: +${doublerotary}青豆剩余${doubleTimes}次`)
                }
            }
            await earningsInfo();
            await showmsg()
        }
    })()
    .catch((e) => $.logErr(e))
    .finally(() => $.done())
}

function kdHost(api, body) {
    return {
        url: 'https://kd.youth.cn/' + api + `&${myuid}`,
        headers: {
            'Accept': '*/*',
            'Accept-Encoding': 'gzip, deflate, br',
            'Referer': 'https://kd.youth.cn/h5/20190301taskcenter/ios/index.html?' + cookie,
            'Host': 'kd.youth.cn',
            'User-Agent': 'Mozilla/5.0 (iPhone; CPU iPhone OS 14_5 like Mac OS X) AppleWebKit/605.1.15 (KHTML, like Gecko) Mobile/15E148',
            'X-Requested-With': 'XMLHttpRequest'
        },
        body: body,
        //timeout: 1000,
    }
}

function userInfo() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/NewTaskIos/getSign'), async(error, resp, data) => {
            signinfo = JSON.parse(data);
            if (signinfo.status == 1) {
                cash = signinfo.data.user.money,
                signday = signinfo.data.sign_day,
                totalscore = signinfo.data.user.score;
                $.sub = `【收益总计】${totalscore}青豆 现金约${cash}元`;
                nick = '账号:' + signinfo.data.user.nickname;
                if (cookieArr.length == 1) {
                    $.setdata(nick, "zq_nick")
                } else {
                    $.setdata("账号" + cookieArr.length + "合一", "zq_nick")
                };
                if (parseInt(cash) >= withdrawcash && !withdrawBody == false) {
                    await withDraw()
                };
                if (signinfo.data.is_sign == false) {
                    await getsign();
                    if (signday == 6) {
                        await SevCont();
                    }
                } else if (signinfo.data.is_sign == true) {
                    $.desc = `【签到结果】🔁 (今天+${signinfo.data.sign_score}青豆)已连签${signday}天\n<本次收益> ：\n`
                };
            } else {
                $.log(signinfo.msg);
                return
            }
            resolve()
        })
    })
}

function TaskCenter() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/NewTaskIos/getTaskList?'), async(error, resp, data) => {
            try {
                taskres = JSON.parse(data);
                //$.log(JSON.stringify(taskres,null,2));
                if (taskres.status == 1) {
                    await friendsign();
                    for (dailys of taskres.list.daily) {
                        button = dailys.but,
                        title = dailys.title,
                        dayid = dailys.id,
                        reward_act = dailys.reward_action;
                        await $.wait(500);
                        $.log("去" + title);
                        if (dailys.status == "2") {
                            $.log(title + "，" + button + "，已领取青豆" + dailys.score);
                            $.desc += `【${title}】✅  ${dailys.score}青豆\n`
                        } else if (dailys.status == "1" && dailys.action != "") {
                            $.log(dailys.title + "已完成 ，去领取奖励青豆");
                            await $.wait(600);
                            await getAction(reward_act)
                        } else if (dailys.status == "0") {
                            if (title == "打卡赚钱" && ONCard == "true") {
                                await CardStatus()
                            } else if (dayid == "7") {
                                await readTime()
                            } else if (title == "元宵额外赚") {
                                await Census()
                            } else if (dayid == "10") {
                                $.log(title + "未完成，去做任务");
                                for (x = 0; x < 5; x++) {
                                    $.log("等待5s执行第" + (x + 1) + "次");
                                    await $.wait(5000);
                                    await recordAdVideo(reward_act)
                                }
                            }
                        }
                    }
                }
            } catch (e) {
                $.log("获取任务失败，" + e)
            } finally {
                resolve()
            }
        })
    })
}

function getAction(acttype) {
    return new Promise((resolve, reject) => {
        $.get(kdHost('WebApi/NewTaskIos/sendTwentyScore?action=' + acttype), (error, resp, data) => {
            let actres = JSON.parse(data);
            if (actres.status == 1) {
                $.log("获得青豆" + actres.score)
            } else if (actres.status == 0) {
                $.log(actres.msg)
            }
            resolve()
        })
    })
}

function getsign() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/NewTaskIos/sign'), async(error, resp, data) => {
            signres = JSON.parse(data);
            if (signres.status == 2) {
                sub = `签到失败，Cookie已失效‼️`;
                $.msg($.name, sub, "");
                return;
            } else if (signres.status == 1) {
                $.desc = `【签到结果】成功 🎉 青豆: +${signres.score}，明日青豆: +${signres.nextScore}\n`;
                await comApp()
            }
            resolve()
        })
    })
}

function getArt() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/ArticleTop/listsNewTag'), async(error, resp, data) => {
            artres = JSON.parse(data);
            if (artres.status == 1) {
                for (arts of artres.data.items) {
                    titlename = arts.title;
                    account = arts.account_id;
                    if (arts.status == "1") {
                        $.log("去转发文章");
                        $.log(titlename + " ----- " + arts.account_name);
                        await artshare(arts.id);
                        break;
                        //await $.wait(500)
                    }
                }
            }
            resolve()
        })
    })
}

function artshare(artsid) {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/ShareNew/getShareArticleReward', cookie + "&" + "article_id=" + artsid), async(error, resp, data) => {
            shareres = JSON.parse(data);
            if (shareres.status == 1) {
                $.log("转发成功，共计转发" + shareres.data.items.share_num + "篇文章，获得青豆" + shareres.data.score)
            }
            resolve()
        })
    })
}

function withDraw() {
    return new Promise((resolve, reject) => {
        const url = {
            url: withdrawUrl,
            headers: {
                'User-Agent': 'KDApp/2.0.0 (iPhone; iOS 14.5; Scale/3.00)'
            },
            body: withdrawBody,
        };
        $.post(url, (error, resp, data) => {
            withDrawres = JSON.parse(data)
            if (withDrawres.error_code == 0) {
                $.desc += `【自动提现】提现${withdrawcash}元成功\n`
                $.msg($.name,$.sub,$.desc)
            } else if (withDrawres.error_code == "10002") {
                $.log(`自动提现失败，${withDrawres.homeTime.text}`)
            } else {
                $.log(`自动提现失败，${withDrawres.message}`)
            }
            resolve()
        })
    })
}

function CardStatus() {
    return new Promise((resolve, reject) => {
        $.get(kdHost('WebApi/PunchCard/getMainData?&' + cookie), async(error, resp, data) => {
            punchcard = JSON.parse(data);
            if (punchcard.code == 1) {
                if (punchcard.data.user.status == 0 && $.time("HH") > "22") {
                    await punchCard()
                } else if (punchcard.data.user.status == 2) {
                    $.log("每日打卡已报名，请每天早晨" + cardTime + "点运行打卡");
                    $.desc += `【打卡报名】🔔 待明早${cardTime}点打卡\n`
                } else if (punchcard.data.user.status == 3 && $.time("HH") == cardTime) {
                    $.log("打卡时间已到，去打卡");
                    await endCard()
                } else if (punchcard.data.user.status == 0) {
                    $.log("今日您未报名早起打卡，报名时间统一设置成晚上23点")
                }
            } else if (punchcard.code == 0) {
                $.log("打卡申请失败" + data)
            }
            resolve();
        })
    })
}

function punchCard() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/PunchCard/signUp'), (error, response, data) => {
            punchcardstart = JSON.parse(data);
            if (punchcardstart.code == 1) {
                $.desc += `【打卡报名】打卡报名${punchcardstart.msg}✅\n`;
                $.log("每日报名打卡成功，报名时间:" + `${$.time('MM-dd HH:mm')}`)
            } else {
                $.desc += `【打卡报名】🔔${punchcardstart.msg}\n`
                    // $.log(punchcardstart.msg)
            }
            resolve();
        })
    })
}

//结束打卡
function endCard() {
        return new Promise((resolve, reject) => {
            $.post(kdHost('WebApi/PunchCard/doCard?'), async(error, resp, data) => {
                punchcardend = JSON.parse(data);
                if (punchcardend.code == 1) {
                    $.desc += `【早起打卡】${punchcardend.data.card_time}${punchcardend.msg}✅ `;
                    $.log("早起打卡成功，打卡时间:" + `${punchcardend.data.card_time}`);
                    await $.wait(1000);
                    await Cardshare()
                } else if (punchcardend.code == 0) {
                    // TODO .不在打卡时间范围内
                    $.desc += `【早起打卡】${punchcardend.msg}\n`;
                    // $.log("不在打卡时间范围内")
                }
                resolve()
            })
        })
    }
    //打卡分享

function Cardshare() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/PunchCard/shareStart?'), async(error, resp, data) => {
            sharestart = JSON.parse(data);
            if (sharestart.code == 1) {
                $.log("等待2s，去打卡分享");
                await $.wait(2000);
                $.post(kdHost('WebApi/PunchCard/shareEnd?'), (error, response, data) => {
                    shareres = JSON.parse(data);
                    if (shareres.code == 1) {
                        $.desc += ` 打卡分享+${shareres.data.score}青豆\n`;
                        $.msg($.name, "", $.desc)
                    } else {
                        //$.desc += `【打卡分享】${shareres.msg}\n`
                        //$.log(`${shareres.msg}`)
                    }
                    resolve()
                })
            }
        })
    })
}


function SevCont() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/PunchCard/luckdraw?'), async(error, resp, data) => {
            let sevres = JSON.parse(data);
            if (sevres.code == 1) {
                $.desc += `【七日签到】 + ${sevres.data.score}青豆\n`
            } else if (sevres.code == 0) {
                //$.desc += `【七日签到】${sevres.msg}\n`;
                //$.log(`七日签到:${sevres.msg}`)
            }
            resolve()
        })
    })
}
function Census() {
    return new Promise((resolve, reject) =>{
    $.post(kdHost('u/Uuz73'),async(error, resp, data) =>{
            resolve()
        })
    })
}
function int() {
        return new Promise((resolve, reject) => {
            let url = {
                url: "https://focus.youth.cn/v/oHi6Z/share?",
                headers: kdHost().headers
            }
            $.post(url, (error, resp, data) => {
                //$.log(resp)
                resolve()
            })
        })
    }
    //开启时段宝箱

function openbox() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/invite/openHourRed'), async(error, resp, data) => {
            let boxres = JSON.parse(data);
            if (boxres.code == 1) {
                boxretime = boxres.data.time;
                $.desc += '【时段宝箱】 +' + boxres.data.score + '青豆，' + boxres.data.time / 60 + '分钟后再次奖励\n';
                await boxshare();
                await getArt();
                await int()
            } else {
                $.log('时段宝箱:' + boxres.msg)
            }
            resolve()
        })
    })
}

//宝箱分享
function boxshare() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/invite/shareEnd'), (error, resp, data) => {
            let shareres = JSON.parse(data);
            if (shareres.code == 1) {
                //$.desc += `【宝箱分享】 + ${shareres.data.score}青豆\n`
            }
            resolve()
        })
    })
}

function friendsign() {
    return new Promise((resolve, reject) => {
        $.get(kdHost('WebApi/ShareSignNew/getFriendActiveList'), async(error, resp, data) => {
            let addsign = JSON.parse(data);
            if (addsign.error_code == "0" && addsign.data.active_list.length > 0) {
                friendsitem = addsign.data.active_list;
                for (friends of friendsitem) {
                    if (friends.button == 1) {
                        await friendSign(friends.uid)
                    }
                }
            }
            resolve()
        })
    })
}

function friendSign(uid) {
    return new Promise((resolve, reject) => {
        $.get(kdHost('WebApi/ShareSignNew/sendScoreV2?friend_uid=' + uid), (error, resp, data) => {
            let friendres = JSON.parse(data);
            if (friendres.error_code == "0") {
                $.desc += '【好友红包】+' + friendres.data[0].score + '个青豆\n';
                $.log('好友签到，我得红包 +' + friendres.data[0].score + '个青豆')
            }
            resolve()
        })
    })
}

//看视频奖励
function getAdVideo() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('taskCenter/getAdVideoReward', 'type=taskCenter'), (error, resp, data) => {
            let adVideores = JSON.parse(data);
            if (adVideores.status == 1) {
                //$.desc += `【观看视频】+${adVideores.score}个青豆\n`;
                $.log("观看视频广告" + adVideores.num + "次 +" + adVideores.score + "青豆")
            }
            resolve()
        })
    })
}

function recordAdVideo(acttype) {
    return new Promise((resolve, reject) => {
        $.get(kdHost('WebApi/NewTaskIos/recordNum?action=' + acttype), async(error, resp, data) => {
            try {
                record = JSON.parse(data);
            } catch (e) {
                $.log("获取任务失败，" + e)
            } finally {
                resolve()
            }
        })
    })
}

function batHost(api, body) {
    return {
        url: 'https://ios.baertt.com/v5/' + api,
        headers: {
            'User-Agent': 'KDApp/2.0.0 (iPhone; iOS 14.5; Scale/3.00)',
            'Host': 'ios.baertt.com',
            'Content-Type': 'application/x-www-form-urlencoded'
        },
        body: body
    }
}

// 激励视频奖励
function gameVideo() {
    return new Promise((resolve, reject) => {
        $.post(batHost('Game/GameVideoReward.json', articbody), (error, resp, data) => {
            gameres = JSON.parse(data);
            if (gameres.success == true) {
                //$.desc += `【激励视频】${gameres.items.score}\n`
                $.log("激励视频 " + gameres.items.score)
            }
            resolve()
        })
    })
}

function comApp() {
    return new Promise((resolve, reject) => {
        $.post(batHost('mission/msgRed.json', articbody), (error, resp, data) => {
            comres = JSON.parse(data);
            if (comres.success == true) {
                $.desc += `【回访奖励】+${comres.items.score}个青豆\n`
            }
            resolve()
        })
    })
}

//阅读奖励
function readArticle() {
    return new Promise((resolve, reject) => {
        $.post(batHost('article/complete.json', articbody), (error, resp, data) => {
            try {
                readres = JSON.parse(data);
                if (data.indexOf('read_score') > -1 && readres.items.read_score != 0) {
                    $.desc += `【阅读奖励】+${readres.items.read_score}个青豆\n`;
                    $.log(`阅读奖励 +${readres.items.read_score}个青豆`)
                } else if (readres.items.max_notice == '看太久了，换1篇试试') {
                    //$.log(readres.items.max_notice)
                }
            } catch (e) {
                $.logErr(e + resp);
            } finally {
                resolve()
            }
        })
    })
}

function readTime() {
    return new Promise((resolve, reject) => {
        $.post(batHost('user/stay.json', timebody), (error, resp, data) => {
            let timeres = JSON.parse(data);
            if (timeres.error_code == 0) {
                readtimes = timeres.time / 60;
                $.desc += `【阅读时长】共计` + Math.floor(readtimes) + `分钟\n`;
                $.log('阅读时长共计' + Math.floor(readtimes) + '分钟')
            } else {
                if (timeres.error_code == 200001) {
                    $.desc += '【阅读时长】❎ 未获取阅读时长请求\n';
                    $.log(`阅读时长统计失败，原因:${timeres.msg}`)
                }
            }
            resolve()
        })
    })
}

function bonusTask() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/ShareNew/bereadExtraList'), async(error, resp, data) => {
            extrares = JSON.parse(data);
            if (extrares.status == 2) {
                $.log("参数错误" + JSON.stringify(extrares))
            } else if (extrares.status == 1 && extrares.data.taskList[0].status == 1) {
                timestatus = extrares.data.taskList[0].status;
                timetitle = extrares.data.taskList[0].name;
                $.log(timetitle + "可领取，去领青豆");
                await TimePacket()
            }
            resolve()
        })
    })
}

function TimePacket() {
    return new Promise((resolve, reject) => {
        $.post(kdHost('WebApi/TimePacket/getReward', cookie), (error, resp, data) => {
            let timeres = JSON.parse(data);
            if (timeres.code == 1) {
                $.log("获得" + timeres.data.score + "青豆");
                $.desc += "【" + timetitle + "】获得" + timeres.data.score + "青豆\n"
            } else if (timeres.code == 0) {
                $.log(timeres.msg)
            }
            resolve()
        })
    })
}

//转盘任务
function rotary() {
    return new Promise((resolve, reject) => {
        $.post(kdHost(`WebApi/RotaryTable/turnRotary?_=${Date.now()}&`, cookie), async(error, resp, data) => {
            try {
                rotaryres = JSON.parse(data);
                if (rotaryres.status == 0) {
                    rotarynum = `转盘${rotaryres.msg}🎉`;
                    $.log(rotarynum)
                } else if (rotaryres.status == 1) {
                    $.log("等待" + s + "秒进行开始转盘任务");
                    rotaryscore += rotaryres.data.score;
                    rotarytimes = rotaryres.data.remainTurn;
                    doubleTimes = rotaryres.data.doubleNum;
                    $.log("进行" + parseInt(100 - rotarytimes) + "次转盘，获得" + rotaryres.data.score + "青豆");
                    if (rotaryres.data.score != 0 && doubleTimes != 0) {
                        $.log("等待10s，获得双倍青豆")
                        await $.wait(10000);
                        await TurnDouble()
                    }
                    await rotaryCheck()
                }
            } catch (e) {
                $.logErr(e, resp)
            } finally {
                resolve()
            }
        })
    })
}

//转盘宝箱判断
function rotaryCheck() {
    return new Promise(async(resolve) => {
        let i = 0;
        while (i <= 3) {
            if (100 - rotarytimes >= rotaryres.data.chestOpen[i].times && rotaryres.data.chestOpen[i].received == 0) {
                await runRotary(i + 1)
            }
            i++;
        }
        resolve();
    })
}

//开启宝箱
function runRotary(index) {
    return new Promise((resolve, reject) => {
        const rotarbody = cookie + '&num=' + index;
        $.post(kdHost(`WebApi/RotaryTable/chestReward?_=${Date.now()}&`, rotarbody), (error, resp, data) => {
            let rotaryresp = JSON.parse(data);
            if (rotaryresp.status == 1) {
                $.desc += `【转盘宝箱${index}】+${rotaryresp.data.score}个青豆\n`
            } else {
                if (rotaryresp.code == "10010") {
                    $.desc += `【转盘宝箱${index}】+今日抽奖完成\n`
                }
            }
            resolve();
        })
    })
}

//转盘双倍奖励
function TurnDouble() {
    return new Promise((resolve, reject) => {
        $.post(kdHost(`WebApi/RotaryTable/toTurnDouble?_=${Date.now()}&`, cookie), (error, resp, data) => {
            try {
                let Doubleres = JSON.parse(data);
                if (Doubleres.data.is_double == 1) {
                    $.log("获得双倍青豆+" + Doubleres.data.score1);
                    doublerotary += Doubleres.data.score
                }
            } catch (e) {
                $.logErr(e, resp)
            } finally {
                resolve()
            }
        })
    })
}

function earningsInfo() {
    return new Promise((resolve, reject) => {
        $.get(kdHost(`wap/user/balance?` + cookie), (error, response, data) => {
            infores = JSON.parse(data);
            if (infores.status == 0) {
                $.desc += '<收益统计> ：\n'
                for (i = 0; i < infores.history[0].group.length; i++) {
                    $.desc += '【' + infores.history[0].group[i].name + '】' + infores.history[0].group[i].money + '个青豆\n'
                }
                $.desc += '<今日合计>： ' + infores.history[0].score + " 青豆"
            }
            resolve()
        })
    })
}
async function showmsg() {
    if ($.isNode() && rotaryres.status !== 0 && rotarytimes && (100 - rotarytimes) % 95 == 0 && cash >= 10) {
        await notify.sendNotify($.name + " " + nick, "您的余额约为" + cash + "元，已可以提现" + '\n' + $.sub + `\n${$.desc}`)
    } else if (rotaryres.status == 1 && rotarytimes >= 97) {
        $.msg($.name + " " + nick, $.sub, $.desc) //默认前三次为通知
    } else if (rotaryres.status == 1 && rotarytimes % notifyInterval == 0) {
        $.msg($.name + " " + nick, $.sub, $.desc) //转盘次数/间隔整除时通知;
    } else if (rotaryres.status == 1 && rotarytimes == "99") {
        $.msg($.name + "  " + nick + " " + rotarynum, $.sub, $.desc) //转盘剩余1次时通知;
    } else {
        console.log('\n' + $.sub + '\n' + $.desc)
    }
}

function GetCookie(){if($request&&$request.method!=`OPTIONS`&&$request.url.match(/\/NewTaskIos\/getTaskList/)){RefererVal=$request.headers.Referer;signheaderVal=RefererVal.match(/&uid=\d+/)+RefererVal.match(/&cookie=[_a-zA-Z0-9-]+/)+RefererVal.match(/&cookie_id=[a-zA-Z0-9]+/);if(signheaderVal)$.setdata(signheaderVal,'youthheader_zq');$.log(`${$.name}获取Cookie: 成功, signheaderVal: $}`);$.msg($.name,`获取Cookie: 成功🎉`,``)}else if($request&&$request.method!=`OPTIONS`&&$request.url.match(/\/article\/info\/get/)){articlebodyVal=$request.url.split("?")[1];if(articlebodyVal)$.setdata(articlebodyVal,'read_zq');$.log(`${$.name}获取阅读: 成功, articbody: ${articlebodyVal}`);$.msg($.name,`获取阅读请求: 成功🎉`,``)}else if($request&&$request.method!=`OPTIONS`&&$request.url.match(/\/v5\/user\/stay/)){const timebodyVal=$request.body;if(timebodyVal)$.setdata(timebodyVal,'readtime_zq');$.log(`${$.name}获取阅读时长: 成功, timebodyVal: ${timebodyVal}`);$.msg($.name,`获取阅读时长: 成功🎉`,``)}else if($request&&$request.method!=`OPTIONS`&&$request.url.match(/\/withdraw\d?\.json/)){const withdrawVal=$request.body;const withdrawUrl=$request.url;if(withdrawVal)$.setdata(withdrawVal,'cashbody_zq');if(withdrawUrl)$.setdata(withdrawUrl,'cashurl_zq');$.log(`${$.name}, 获取提现请求: 成功, withdrawUrl: ${withdrawUrl}`);$.log(`${$.name}, 获取提现请求: 成功, withdrawBody: ${withdrawVal}`);$.msg($.name,`获取提现请求: 成功🎉`,``)}}

function Env(t,e){"undefined"!=typeof process&&JSON.stringify(process.env).indexOf("GITHUB")>-1&&process.exit(0);class s{constructor(t){this.env=t}send(t,e="GET"){t="string"==typeof t?{url:t}:t;let s=this.get;return"POST"===e&&(s=this.post),new Promise((e,i)=>{s.call(this,t,(t,s,r)=>{t?i(t):e(s)})})}get(t){return this.send.call(this.env,t)}post(t){return this.send.call(this.env,t,"POST")}}return new class{constructor(t,e){this.name=t,this.http=new s(this),this.data=null,this.dataFile="box.dat",this.logs=[],this.isMute=!1,this.isNeedRewrite=!1,this.logSeparator="\n",this.startTime=(new Date).getTime(),Object.assign(this,e),this.log("",`\ud83d\udd14${this.name}, \u5f00\u59cb!`)}isNode(){return"undefined"!=typeof module&&!!module.exports}isQuanX(){return"undefined"!=typeof $task}isSurge(){return"undefined"!=typeof $httpClient&&"undefined"==typeof $loon}isLoon(){return"undefined"!=typeof $loon}toObj(t,e=null){try{return JSON.parse(t)}catch{return e}}toStr(t,e=null){try{return JSON.stringify(t)}catch{return e}}getjson(t,e){let s=e;const i=this.getdata(t);if(i)try{s=JSON.parse(this.getdata(t))}catch{}return s}setjson(t,e){try{return this.setdata(JSON.stringify(t),e)}catch{return!1}}getScript(t){return new Promise(e=>{this.get({url:t},(t,s,i)=>e(i))})}runScript(t,e){return new Promise(s=>{let i=this.getdata("@chavy_boxjs_userCfgs.httpapi");i=i?i.replace(/\n/g,"").trim():i;let r=this.getdata("@chavy_boxjs_userCfgs.httpapi_timeout");r=r?1*r:20,r=e&&e.timeout?e.timeout:r;const[o,h]=i.split("@"),a={url:`http://${h}/v1/scripting/evaluate`,body:{script_text:t,mock_type:"cron",timeout:r},headers:{"X-Key":o,Accept:"*/*"}};this.post(a,(t,e,i)=>s(i))}).catch(t=>this.logErr(t))}loaddata(){if(!this.isNode())return{};{this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e);if(!s&&!i)return{};{const i=s?t:e;try{return JSON.parse(this.fs.readFileSync(i))}catch(t){return{}}}}}writedata(){if(this.isNode()){this.fs=this.fs?this.fs:require("fs"),this.path=this.path?this.path:require("path");const t=this.path.resolve(this.dataFile),e=this.path.resolve(process.cwd(),this.dataFile),s=this.fs.existsSync(t),i=!s&&this.fs.existsSync(e),r=JSON.stringify(this.data);s?this.fs.writeFileSync(t,r):i?this.fs.writeFileSync(e,r):this.fs.writeFileSync(t,r)}}lodash_get(t,e,s){const i=e.replace(/\[(\d+)\]/g,".$1").split(".");let r=t;for(const t of i)if(r=Object(r)[t],void 0===r)return s;return r}lodash_set(t,e,s){return Object(t)!==t?t:(Array.isArray(e)||(e=e.toString().match(/[^.[\]]+/g)||[]),e.slice(0,-1).reduce((t,s,i)=>Object(t[s])===t[s]?t[s]:t[s]=Math.abs(e[i+1])>>0==+e[i+1]?[]:{},t)[e[e.length-1]]=s,t)}getdata(t){let e=this.getval(t);if(/^@/.test(t)){const[,s,i]=/^@(.*?)\.(.*?)$/.exec(t),r=s?this.getval(s):"";if(r)try{const t=JSON.parse(r);e=t?this.lodash_get(t,i,""):e}catch(t){e=""}}return e}setdata(t,e){let s=!1;if(/^@/.test(e)){const[,i,r]=/^@(.*?)\.(.*?)$/.exec(e),o=this.getval(i),h=i?"null"===o?null:o||"{}":"{}";try{const e=JSON.parse(h);this.lodash_set(e,r,t),s=this.setval(JSON.stringify(e),i)}catch(e){const o={};this.lodash_set(o,r,t),s=this.setval(JSON.stringify(o),i)}}else s=this.setval(t,e);return s}getval(t){return this.isSurge()||this.isLoon()?$persistentStore.read(t):this.isQuanX()?$prefs.valueForKey(t):this.isNode()?(this.data=this.loaddata(),this.data[t]):this.data&&this.data[t]||null}setval(t,e){return this.isSurge()||this.isLoon()?$persistentStore.write(t,e):this.isQuanX()?$prefs.setValueForKey(t,e):this.isNode()?(this.data=this.loaddata(),this.data[e]=t,this.writedata(),!0):this.data&&this.data[e]||null}initGotEnv(t){this.got=this.got?this.got:require("got"),this.cktough=this.cktough?this.cktough:require("tough-cookie"),this.ckjar=this.ckjar?this.ckjar:new this.cktough.CookieJar,t&&(t.headers=t.headers?t.headers:{},void 0===t.headers.Cookie&&void 0===t.cookieJar&&(t.cookieJar=this.ckjar))}get(t,e=(()=>{})){t.headers&&(delete t.headers["Content-Type"],delete t.headers["Content-Length"]),this.isSurge()||this.isLoon()?(this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.get(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)})):this.isQuanX()?(this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t))):this.isNode()&&(this.initGotEnv(t),this.got(t).on("redirect",(t,e)=>{try{if(t.headers["set-cookie"]){const s=t.headers["set-cookie"].map(this.cktough.Cookie.parse).toString();this.ckjar.setCookieSync(s,null),e.cookieJar=this.ckjar}}catch(t){this.logErr(t)}}).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)}))}post(t,e=(()=>{})){if(t.body&&t.headers&&!t.headers["Content-Type"]&&(t.headers["Content-Type"]="application/x-www-form-urlencoded"),t.headers&&delete t.headers["Content-Length"],this.isSurge()||this.isLoon())this.isSurge()&&this.isNeedRewrite&&(t.headers=t.headers||{},Object.assign(t.headers,{"X-Surge-Skip-Scripting":!1})),$httpClient.post(t,(t,s,i)=>{!t&&s&&(s.body=i,s.statusCode=s.status),e(t,s,i)});else if(this.isQuanX())t.method="POST",this.isNeedRewrite&&(t.opts=t.opts||{},Object.assign(t.opts,{hints:!1})),$task.fetch(t).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>e(t));else if(this.isNode()){this.initGotEnv(t);const{url:s,...i}=t;this.got.post(s,i).then(t=>{const{statusCode:s,statusCode:i,headers:r,body:o}=t;e(null,{status:s,statusCode:i,headers:r,body:o},o)},t=>{const{message:s,response:i}=t;e(s,i,i&&i.body)})}}time(t){let e={"M+":(new Date).getMonth()+1,"d+":(new Date).getDate(),"H+":(new Date).getHours(),"m+":(new Date).getMinutes(),"s+":(new Date).getSeconds(),"q+":Math.floor(((new Date).getMonth()+3)/3),S:(new Date).getMilliseconds()};/(y+)/.test(t)&&(t=t.replace(RegExp.$1,((new Date).getFullYear()+"").substr(4-RegExp.$1.length)));for(let s in e)new RegExp("("+s+")").test(t)&&(t=t.replace(RegExp.$1,1==RegExp.$1.length?e[s]:("00"+e[s]).substr((""+e[s]).length)));return t}msg(e=t,s="",i="",r){const o=t=>{if(!t)return t;if("string"==typeof t)return this.isLoon()?t:this.isQuanX()?{"open-url":t}:this.isSurge()?{url:t}:void 0;if("object"==typeof t){if(this.isLoon()){let e=t.openUrl||t.url||t["open-url"],s=t.mediaUrl||t["media-url"];return{openUrl:e,mediaUrl:s}}if(this.isQuanX()){let e=t["open-url"]||t.url||t.openUrl,s=t["media-url"]||t.mediaUrl;return{"open-url":e,"media-url":s}}if(this.isSurge()){let e=t.url||t.openUrl||t["open-url"];return{url:e}}}};this.isMute||(this.isSurge()||this.isLoon()?$notification.post(e,s,i,o(r)):this.isQuanX()&&$notify(e,s,i,o(r)));let h=["","==============\ud83d\udce3\u7cfb\u7edf\u901a\u77e5\ud83d\udce3=============="];h.push(e),s&&h.push(s),i&&h.push(i),console.log(h.join("\n")),this.logs=this.logs.concat(h)}log(...t){t.length>0&&(this.logs=[...this.logs,...t]),console.log(t.join(this.logSeparator))}logErr(t,e){const s=!this.isSurge()&&!this.isQuanX()&&!this.isLoon();s?this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t.stack):this.log("",`\u2757\ufe0f${this.name}, \u9519\u8bef!`,t)}wait(t){return new Promise(e=>setTimeout(e,t))}done(t={}){const e=(new Date).getTime(),s=(e-this.startTime)/1e3;this.log("",`\ud83d\udd14${this.name}, \u7ed3\u675f! \ud83d\udd5b ${s} \u79d2`),this.log(),(this.isSurge()||this.isQuanX()||this.isLoon())&&$done(t)}}(t,e)}
